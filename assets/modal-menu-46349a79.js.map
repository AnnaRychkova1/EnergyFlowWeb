{"version":3,"file":"modal-menu-46349a79.js","sources":["../../src/js/modal-menu.js"],"sourcesContent":["// import { exerciseId } from './exercises-details'\nimport axios from 'axios';\nimport { hide, show, showLoader, hideLoader} from './services/visibility';\nimport icons from '../img/icons/symbol-defs.svg'\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\n\n\nconst gallery = document.querySelector('.results'); // плюс название содержимого карточки //\nconst backdrop = document.querySelector('.backdrop');\nconst modalCard = document.querySelector('.modal');\nconst favorites = document.querySelector('.ex-add-favorite');\nconst exerciseId = '64f389465ae26083f39b17c0';\n\nconst heartIcon = `\n// <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n//     <use href=\"${icons}#icon-heart\"></use>\n// </svg>`;\n\n\n// renderCard();\n// modalCard.innerHTML = modalWindowMarkup(results);\n// let storage = 'favorites';\n// let storageItem = localStorage.getItem(storage);\n// if (!storageItem) {\n//     storageItem = [];\n// } else {\n//     storageItem = JSON.parse(storageItem);\n// }\n\n// gallery.addEventListener('click', onClickCardContent);\n// async function onClickCardContent(event) {\n//     if (event.target === event.currentTarget) {\n//         return;\n//     }\n//   const element = event.target.closest('.to-favorites-start');\n//   if (element === null) {\n//         return;\n//     }\n//     getLoader();\n//     const elementId = element.dataset.id;\n//     const exercisesInfo = await getCardInfo(elementId);\n\n//   backdrop.classList.remove('is-hidden');\n//   const modalExercisesCard = modalWindowMarkup(exercisesInfo)\n//   modalCard.innerHTML = modalExercisesCard;\n//   hideLoader();\n// }\n\n  const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n  addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n  const closeBtn = document.querySelector('.modal-close-btn');\n  closeBtn.addEventListener('click', onCloseModal);\n  backdrop.addEventListener('click', handleBackdropClick);\n  document.addEventListener('keydown', handleEscapeKey);\n \nasync function addToFavoriteOnClick(event) {\n  const element = event.target.closest('.ex-add-favorite');\n  if (!element) return;\n\n  const elementId = element.dataset.id;\n  const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  const isFavorite = favorites.some(item => item._id === elementId);\n\n  if (isFavorite) {\n    const updatedFavorites = favorites.filter(item => item._id !== elementId);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    element.classList.remove('is-favorite');\n    element.innerHTML = changingButtonName('add');\n  } else {\n    const exercisesCardInfo = await getCardInfo(elementId);\n    localStorage.setItem('favorites', JSON.stringify([...favorites, exercisesCardInfo]));\n    element.classList.add('is-favorite');\n    element.innerHTML = changingButtonName('remove');\n  }\n}\nfunction onCloseModal() {\n  modalCard.classList.add('is-hidden');\n  backdrop.classList.add('is-hidden');\n  modalCard.innerHTML = '';\n\n  document.removeEventListener('keydown', handleEscapeKey);\n  backdrop.removeEventListener('click', handleBackdropClick);\n}\nfunction handleBackdropClick(event) {\n  if (event.target.closest('.modal')) {\n    return;\n  }\n  modalCard.classList.add('is-hidden');\n  backdrop.classList.add('is-hidden');\n  modalCard.innerHTML = '';\n\n  document.removeEventListener('keydown', handleEscapeKey);\n  backdrop.removeEventListener('click', handleBackdropClick);\n}\nfunction handleEscapeKey(event) {\n  event.preventDefault();\n  if (event.key === 'Escape') {\n    modalCard.classList.add('is-hidden');\n    backdrop.classList.add('is-hidden');\n    modalCard.innerHTML = '';\n\n    document.removeEventListener('keydown', handleEscapeKey);\n    backdrop.removeEventListener('click', handleBackdropClick);\n  }\n}\n\n// const exerciseId = '64f389465ae26083f39b17c0';\nasync function getCardInfo(exerciseId) {\n    try {\n        const BASE_URL = 'https://energyflow.b.goit.study/api';\n        const ENDPOINT = 'exercises';\n        const { data } = await axios.get(`${BASE_URL}/${ENDPOINT}/${exerciseId}`);\n        return data;\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n\n\n\n\n// async function renderCard() {\n//     try {\n//       const { results } = await getCardInfo(exerciseId);\n//       modalWindowMarkup(results);\n//       console.log(results)\n//     } catch (error) {\n//         console.error(error.message);\n//     } finally {\n\n//     }\n// }\n\n// modalCard.innerHTML = modalWindowMarkup(results);\nfunction modalWindowMarkup(results = {}) {\n   const {\n    _id,\n    bodyPart,\n    equipment,\n    time,\n    target,\n    burnedCalories,\n    gifUrl,\n    name,\n    popularity,\n    rating,\n    description,\n  } = results;\n     const markup =\n         `<div class=\"modal\">\n            <button class=\"modal-close-btn\">\n                <svg\n                    class=\"modal-close-icon\"\n                    width=\"24\"\n                    height=\"24\">\n                    <use href=\"${icons}#icon-x\"></use>\n                </svg>\n            </button>\n            <div class=\"exercise-gif\">\n              <picture>\n                <source\n                  media=\"(max-width:767.98px)\"\n                  type=\"gif\"\n                  width=\"295\"\n                  height=\"258\"\n                  />\n                <source\n                  media=\"(min-width:768px)\"\n                  type=\"gif\"\n                  width=\"270\"\n                  height=\"259\"\n                  />\n                  <img\n                    class=\"gif-ex\"\n                    src=\"${gifUrl}\"\n                    width=\"295\"\n                    height=\"258\"\n                    alt=\"${name}\"\n                  />\n              </picture>\n            </div>\n            <div class=\"ex-content-container\">\n                <h3 class=\"exercise-name\">${name}</h3>\n               <div class=\"rating-container\">\n                <p class=\"ex-current-rating\">${rating}</p>\n                <ul class=\"exercise-stars-list\">\n                    ${renderStars(popularity)}\n                </ul>\n                </div>\n                <div class=\"exercise-information\">\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Target</span>\n                        <span class=\"exercise-label\">${target}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Body part</span>\n                        <span class=\"exercise-label\">${bodyPart}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Equipment</span>\n                        <span class=\"exercise-label\">${equipment}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Popular</span>\n                        <span class=\"exercise-label\">${popularity}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Burned calories</span>\n                        <span class=\"exercise-label\">${burnedCalories}/3 min</span>\n                    </div>\n\n                    <p class=\"exercise-description\">\n                        ${description}\n                    </p>\n\n                    <div class=\"ex-add-btn-container\">\n                        <button data-id=\"${_id}\" class=\"ex-add-favorite\">\n                            Add to favorites\n                            <svg\n                                class=\"heart-svg\"\n                                width=\"18\"\n                                height=\"18\">\n                                <use href=\"use href=\"${icons}#icon-heart\"></use>\n                            </svg>\n                        </button>\n                         <button data-id=\"${_id}\" class=\"ex-rating-button\">\n                           Give a rating\n                         </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n   return modalCard.innerHTML = markup;\n}\nconst activeColor = '#eea10c';\nconst noActiveColor = '#e8e8e8';\nconst stars = document.querySelectorAll('.ex-rate-icon');\nstars.forEach((star, index) => {\n  if (index < ratingStar) {\n    star.style.fill = activeColor;\n  } else {\n    star.style.fill = noActiveColor;\n  }\n});\nfunction renderStars(rating) {\n    const filledStar = '<span class=\"star\">&#9733;</span>';\n    const emptyStar = '<span class=\"star\">&#9734;</span>';\n    const filledStars = filledStar.repeat(Math.floor(rating));\n    const halfStar = rating % 1 !== 0 ? '<span class=\"star\">&#9733;</span>' : '';\n    const emptyStars = emptyStar.repeat(5 - Math.ceil(rating));\n    return filledStars + halfStar + emptyStars;\n}\n\n// // const heartIcon = `\n// // // <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n// // //     <use href=\"${icons}#icon-heart\"></use>\n// // // </svg>`;\n\n\n// // renderCard();\n// // let storage = 'favorites';\n// // let storageItem = localStorage.getItem(storage);\n// // if (!storageItem) {\n// //     storageItem = [];\n// // } else {\n// //     storageItem = JSON.parse(storageItem);\n// // }\n\n// // // gallery.addEventListener('click', onClickCardContent);\n// // // async function onClickCardContent(event) {\n// // //     if (event.target === event.currentTarget) {\n// // //         return;\n// // //     }\n// // //   const element = event.target.closest('.to-favorites-start');\n// // //   if (element === null) {\n// // //         return;\n// // //     }\n// // //     getLoader();\n// // //     const elementId = element.dataset.id;\n// // //     const exercisesInfo = await getCardInfo(elementId);\n\n// // //     backdrop.classList.remove('is-hidden');\n// // //   modalCard.innerHTML = '';\n// // //   hideLoader();\n// // // }\n\n// //   const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n// //   addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n// // // // gallery.addEventListener('click', onClickCardContent);\n// // // // async function onClickCardContent(event) {\n// // // //     if (event.target === event.currentTarget) {\n// // // //         return;\n// // // //     }\n// // // //     const element = event.target.closest('.favorites-start'); // название li элемента содержимого карточки //\n// // // //     if (element === null) {\n// // // //         return;\n// // // //     }\n// // // //     getLoader();\n// // // //     const elementId = element.dataset.id;\n// // // //     const exercisesInfo = await getCardInfo(elementId);\n\n// // // //     backdrop.classList.remove('is-hidden');\n// // // //   modalCard.innerHTML = '';\n// // // //   hideLoader();\n// // // // }\n// // //   const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n// // //   addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n// // //   const closeBtn = document.querySelector('.modal-close-btn');\n// // //   closeBtn.addEventListener('click', onCloseModal);\n// // //   backdrop.addEventListener('click', handleBackdropClick);\n// // //   document.addEventListener('keydown', handleEscapeKey);\n \n// // // async function addToFavoriteOnClick(event) {\n// // //   const element = event.target.closest('.ex-add-favorite');\n// // //   if (!element) return;\n\n// // //   const elementId = element.dataset.id;\n// // //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n// // //   const isFavorite = favorites.some(item => item._id === elementId);\n\n// //   if (isFavorite) {\n// //     const updatedFavorites = favorites.filter(item => item._id !== elementId);\n// //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n// //     element.classList.remove('is-favorite');\n// //     element.innerHTML = changingButtonName('add');\n// //   } else {\n// //     const exercisesCardInfo = await getCardInfo(elementId);\n// //     // localStorage.setItem('favorites', JSON.stringify([...favorites, exercisesCardInfo]));\n// //     // element.classList.add('is-favorite');\n// //     element.innerHTML = changingButtonName('remove');\n// //   }\n\n// // function onCloseModal() {\n// //   modalCard.classList.add('is-hidden');\n// //   backdrop.classList.add('is-hidden');\n// //   modalCard.innerHTML = '';\n\n// //   document.removeEventListener('keydown', handleEscapeKey);\n// //   backdrop.removeEventListener('click', handleBackdropClick);\n// // }\n// // function handleBackdropClick(event) {\n// //   // if (event.target.closest('.modal')) {\n// //   //   return;\n// //   // }\n// //   modalCard.classList.add('is-hidden');\n// //   backdrop.classList.add('is-hidden');\n// //   modalCard.innerHTML = '';\n\n// //   document.removeEventListener('keydown', handleEscapeKey);\n// //   backdrop.removeEventListener('click', handleBackdropClick);\n// // }\n// // function handleEscapeKey(event) {\n// //   event.preventDefault();\n// //   if (event.key === 'Escape') {\n// //     modalCard.classList.add('is-hidden');\n// //     backdrop.classList.add('is-hidden');\n// //     modalCard.innerHTML = '';\n\n// //     document.removeEventListener('keydown', handleEscapeKey);\n// //     backdrop.removeEventListener('click', handleBackdropClick);\n// //   }\n// // }\n\n// // // const exerciseId = '64f389465ae26083f39b17c0';\n// // async function getCardInfo(exerciseId) {\n// //     try {\n// //         const { data } = await axios.get(`${BASE_URL}/${ENDPOINT_EXERCISES}/${exerciseId}`);\n// //         return data;\n// //     } catch (err) {\n// //         console.error(err);\n// //     }\n// // }\n\n\n// // // function changingButtonName(value = 'add') {\n// // //   if (value === 'add') {\n// // //     return `Add to favorites\n// // //         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n// // //           <use href=\"${heartIcon}#icon-heart\"></use>\n// // //         </svg>`;\n// // //   } else {\n// // //     return `Remove from\n// // //         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n// // //           <use href=\"${heartIcon}#icon-heart\"></use>\n// // //         </svg>`;\n\n\n// // async function renderCard() {\n// //     try {\n// //       const { results } = await getCardInfo(exerciseId);\n// //       modalWindowMarkup(results);\n// //       console.log(results)\n// //     } catch (error) {\n// //         console.error(error.message);\n// //     } finally {\n\n// //     }\n// // }\n\n// // // modalCard.innerHTML = modalWindowMarkup(results);\n// // function modalWindowMarkup(results = {}) {\n// //    const {\n// //     _id,\n// //     bodyPart,\n// //     equipment,\n// //     time,\n// //     target,\n// //     burnedCalories,\n// //     gifUrl,\n// //     name,\n// //     popularity,\n// //     rating,\n// //     description,\n// //   } = results;\n// //      const markup =\n// //          `<div class=\"modal\">\n// //             <button class=\"modal-close-btn\">\n// //                 <svg\n// //                     class=\"modal-close-icon\"\n// //                     width=\"24\"\n// //                     height=\"24\">\n// //                     <use href=\"${icons}#icon-x\"></use>\n// //                 </svg>\n// //             </button>\n// //             <div class=\"exercise-gif\">\n// //               <picture>\n// //                 <source\n// //                   media=\"(max-width:767.98px)\"\n// //                   type=\"gif\"\n// //                   width=\"295\"\n// //                   height=\"258\"\n// //                   />\n// //                 <source\n// //                   media=\"(min-width:768px)\"\n// //                   type=\"gif\"\n// //                   width=\"270\"\n// //                   height=\"259\"\n// //                   />\n// //                   <img\n// //                     class=\"gif-ex\"\n// //                     src=\"${gifUrl}\"\n// //                     width=\"295\"\n// //                     height=\"258\"\n// //                     alt=\"${name}\"\n// //                   />\n// //               </picture>\n// //             </div>\n// //             <div class=\"ex-content-container\">\n// //                 <h3 class=\"exercise-name\">${name}</h3>\n// //                 <p class=\"ex-current-rating\">${rating}</p>\n// //                 <ul class=\"exercise-stars-list\">\n// //                     ${renderStars(popularity)}\n// //                 </ul>\n\n// //                 <div class=\"exercise-information\">\n// //                     <div class=\"ex-block\">\n// //                         <span class=\"exercise-value\">Target</span>\n// //                         <span class=\"exercise-label\">${target}</span>\n// //                     </div>\n// //                     <div class=\"ex-block\">\n// //                         <span class=\"exercise-value\">Body part</span>\n// //                         <span class=\"exercise-label\">${bodyPart}</span>\n// //                     </div>\n// //                     <div class=\"ex-block\">\n// //                         <span class=\"exercise-value\">Equipment</span>\n// //                         <span class=\"exercise-label\">${equipment}</span>\n// //                     </div>\n// //                     <div class=\"ex-block\">\n// //                         <span class=\"exercise-value\">Popular</span>\n// //                         <span class=\"exercise-label\">${popularity}</span>\n// //                     </div>\n// //                     <div class=\"ex-block\">\n// //                         <span class=\"exercise-value\">Burned calories</span>\n// //                         <span class=\"exercise-label\">${burnedCalories}/3 min</span>\n// //                     </div>\n\n// //                     <p class=\"exercise-description\">\n// //                         ${description}\n// //                     </p>\n\n// //                     <div class=\"ex-add-btn\">\n// //                         <button data-id=\"${_id}\" class=\"add-btn-icon\">\n// //                             Add to favorites\n// //                             <svg\n// //                                 class=\"heart-svg\"\n// //                                 width=\"18\"\n// //                                 height=\"18\">\n// //                                 <use href=\"use href=\"${icons}#icon-heart\"></use>\n// //                             </svg>\n// //                         </button>\n// //                          <button data-id=\"${_id}\" class=\"ex-rating-button\">\n// //                            Give a rating\n// //                          </button>\n// //                     </div>\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     `;\n// //    return modalCard.innerHTML = markup;\n// // }\n\n// // function renderStars(rating) {\n// //     const filledStar = '<span class=\"star\">&#9733;</span>';\n// //     const emptyStar = '<span class=\"star\">&#9734;</span>';\n// //     const filledStars = filledStar.repeat(Math.floor(rating));\n// //     const halfStar = rating % 1 !== 0 ? '<span class=\"star\">&#9733;</span>' : '';\n// //     const emptyStars = emptyStar.repeat(5 - Math.ceil(rating));\n// //     return filledStars + halfStar + emptyStars;\n// // }\n\n\n// // export { getCardInfo, renderCard }\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n// // // }\n// // // function onCloseModal() {\n// // //   modalCard.classList.add('is-hidden');\n// // //   backdrop.classList.add('is-hidden');\n// // //   modalCard.innerHTML = '';\n\n// // //   document.removeEventListener('keydown', handleEscapeKey);\n// // //   backdrop.removeEventListener('click', handleBackdropClick);\n// // // }\n// // // function handleBackdropClick(event) {\n// // //   if (event.target.closest('.modal')) {\n// // //     return;\n// // //   }\n// // //   modalCard.classList.add('is-hidden');\n// // //   backdrop.classList.add('is-hidden');\n// // //   modalCard.innerHTML = '';\n\n// // //   document.removeEventListener('keydown', handleEscapeKey);\n// // //   backdrop.removeEventListener('click', handleBackdropClick);\n// // // }\n// // // function handleEscapeKey(event) {\n// // //   event.preventDefault();\n// // //   if (event.key === 'Escape') {\n// // //     modalCard.classList.add('is-hidden');\n// // //     backdrop.classList.add('is-hidden');\n// // //     modalCard.innerHTML = '';\n\n// // //     document.removeEventListener('keydown', handleEscapeKey);\n// // //     backdrop.removeEventListener('click', handleBackdropClick);\n// // //   }\n// // // }\n\n// // // // const exerciseId = '64f389465ae26083f39b17c0';\n// // // async function getCardInfo(exerciseId) {\n// // //     try {\n// // //         const BASE_URL = 'https://energyflow.b.goit.study/api';\n// // //         const ENDPOINT = 'exercises';\n// // //         const { data } = await axios.get(`${BASE_URL}/${ENDPOINT}/${exerciseId}`);\n// // //         return data;\n// // //     } catch (err) {\n// // //         console.error(err);\n// // //     }\n// // // }\n\n\n\n// // // function changingButtonName(value = 'add') {\n// // //   if (value === 'add') {\n// // //     return `Add to favorites\n// // //         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n// // //           <use href=\"${heartIcon}#icon-heart\"></use>\n// // //         </svg>`;\n// // //   } else {\n// // //     return `Remove from\n// // //         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n// // //           <use href=\"${heartIcon}#icon-heart\"></use>\n// // //         </svg>`;\n// // //   }\n// // // }\n\n// // // async function renderCard() {\n// // //     try {\n// // //         const results = await getCardInfo(exerciseId);\n// // //         modalWindowMarkup(results);\n// // //     } catch (error) {\n// // //         console.error(error.message);\n// // //     }\n// // // }\n\n// // // function modalWindowMarkup(results) {\n// // //     const markup = results\n// // //         .map(({\n// // //             _id,\n// // //             bodyPart,\n// // //             equipment,\n// // //             gifUrl,\n// // //             name,\n// // //             target,\n// // //             description,\n// // //             rating,\n// // //             burnedCalories,\n// // //             time,\n// // //             popularity,\n// // //         }) =>\n// // //             `<div class=\"modal\">\n// // //       <button class=\"modal-close-btn\">\n// // //         <svg\n// // //           class=\"modal-close-icon\"\n// // //           width=\"24\"\n// // //           height=\"24\"\n// // //           aria-label=\"close icon\"\n// // //         >\n// // //           <use\n// // //             class=\"ex-close-btn-icon-use\"\n// // //             href=\"../img/icons/all icons/x.svg\"\n// // //           ></use>\n// // //         </svg>\n// // //       </button>\n// // //       <div class=\"exercise-gif\">\n// // //         <img\n// // //           src=\"${gifUrl}\"\n// // //           class=\"gif-ex\"\n// // //           width=\"295\"\n// // //           height=\"258\"\n// // //           alt=\"show exercise\"\n// // //         />\n// // //       </div>\n// // //       <div class=\"ex-content-container\">\n// // //         <h2 class=\"exercise-name\">${name}</h2>\n// // //         <p class=\"ex-current-rating\">${rating}</p>\n// // //         <ul class=\"exercise-stars-list\">\n// // //           ${renderStars(rating)}\n// // //         </ul>\n\n// // //         <div class=\"exercise-information\">\n// // //           <div class=\"ex-block\">\n// // //             <span class=\"exercise-value\">Targer</span>\n// // //             <span class=\"exercise-label ex-target\">${target}</span>\n// // //           </div>\n// // //           <div class=\"ex-block\">\n// // //             <span class=\"exercise-value\">Body part</span>\n// // //             <span class=\"exercise-label ex-body-part\">${bodyPart}</span>\n// // //           </div>\n// // //           <div class=\"ex-block\">\n// // //             <span class=\"exercise-value\">Equipment</span>\n// // //             <span class=\"exercise-label ex-equipment\">${equipment}</span>\n// // //           </div>\n// // //           <div class=\"ex-block\">\n// // //             <span class=\"exercise-value\">Popular</span>\n// // //             <span class=\"exercise-label ex-popular\">${popularity}</span>\n// // //           </div>\n// // //           <div class=\"ex-block\">\n// // //             <span class=\"exercise-value\">Burned calories</span>\n// // //             <span class=\"exercise-label ex-burned-calories\">${burnedCalories}/3 min</span>\n// // //           </div>\n\n// // //           <p class=\"exercise-description\">\n// // //             ${description}\n// // //           </p>\n\n// // //           <div class=\"ex-add-btn\">\n// // //             <button class=\"add-btn-icon\">\n// // //               Add to favorites\n// // //               <svg\n// // //                 class=\"heart-svg\"\n// // //                 width=\"18\"\n// // //                 height=\"18\"\n// // //                 aria-label=\"favorites icon\"\n// // //               >\n// // //                 <use href=\"../img/icons/all icons/heart.svg\"></use>\n// // //               </svg>\n// // //             </button>\n// // //           </div>\n// // //         </div>\n// // // </div>\n// // //     </div>`\n// // //         )\n// // //         .join('');\n// // //     modalCard.innerHTML = markup;\n// // // }\n\n// // //   modalEl.innerHTML = markup;\n// // // }\n\n\n// // async function searchExerciseByID(id) {\n// //   try {\n// //     const { data } = await axios.get(`${BASE_URL}/${ENDPOINT_FILTER}/${exerciseId}`);\n// //     return data;\n// //   } catch (err) {\n// //     console.error(err);\n// //   }\n// // }\n\n\n// // export { getCardInfo };"],"names":["backdrop","modalCard","addToFavoriteBtn","addToFavoriteOnClick","closeBtn","onCloseModal","handleBackdropClick","handleEscapeKey","event","element","elementId","favorites","item","updatedFavorites","exercisesCardInfo","getCardInfo","exerciseId","BASE_URL","ENDPOINT","data","axios","err","activeColor","noActiveColor","stars","star","index"],"mappings":"yCAOgB,SAAS,cAAc,UAAU,EACjD,MAAMA,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAY,SAAS,cAAc,QAAQ,EAC/B,SAAS,cAAc,kBAAkB,EAsCzD,MAAMC,EAAmB,SAAS,cAAc,kBAAkB,EAClEA,EAAiB,iBAAiB,QAASC,CAAoB,EAE/D,MAAMC,EAAW,SAAS,cAAc,kBAAkB,EAC1DA,EAAS,iBAAiB,QAASC,CAAY,EAC/CL,EAAS,iBAAiB,QAASM,CAAmB,EACtD,SAAS,iBAAiB,UAAWC,CAAe,EAEtD,eAAeJ,EAAqBK,EAAO,CACzC,MAAMC,EAAUD,EAAM,OAAO,QAAQ,kBAAkB,EACvD,GAAI,CAACC,EAAS,OAEd,MAAMC,EAAYD,EAAQ,QAAQ,GAC5BE,EAAY,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAInE,GAFmBA,EAAU,KAAKC,GAAQA,EAAK,MAAQF,CAAS,EAEhD,CACd,MAAMG,EAAmBF,EAAU,OAAOC,GAAQA,EAAK,MAAQF,CAAS,EACxE,aAAa,QAAQ,YAAa,KAAK,UAAUG,CAAgB,CAAC,EAClEJ,EAAQ,UAAU,OAAO,aAAa,EACtCA,EAAQ,UAAY,mBAAmB,KAAK,CAChD,KAAS,CACL,MAAMK,EAAoB,MAAMC,EAAYL,CAAS,EACrD,aAAa,QAAQ,YAAa,KAAK,UAAU,CAAC,GAAGC,EAAWG,CAAiB,CAAC,CAAC,EACnFL,EAAQ,UAAU,IAAI,aAAa,EACnCA,EAAQ,UAAY,mBAAmB,QAAQ,CAChD,CACH,CACA,SAASJ,GAAe,CACtBJ,EAAU,UAAU,IAAI,WAAW,EACnCD,EAAS,UAAU,IAAI,WAAW,EAClCC,EAAU,UAAY,GAEtB,SAAS,oBAAoB,UAAWM,CAAe,EACvDP,EAAS,oBAAoB,QAASM,CAAmB,CAC3D,CACA,SAASA,EAAoBE,EAAO,CAC9BA,EAAM,OAAO,QAAQ,QAAQ,IAGjCP,EAAU,UAAU,IAAI,WAAW,EACnCD,EAAS,UAAU,IAAI,WAAW,EAClCC,EAAU,UAAY,GAEtB,SAAS,oBAAoB,UAAWM,CAAe,EACvDP,EAAS,oBAAoB,QAASM,CAAmB,EAC3D,CACA,SAASC,EAAgBC,EAAO,CAC9BA,EAAM,eAAc,EAChBA,EAAM,MAAQ,WAChBP,EAAU,UAAU,IAAI,WAAW,EACnCD,EAAS,UAAU,IAAI,WAAW,EAClCC,EAAU,UAAY,GAEtB,SAAS,oBAAoB,UAAWM,CAAe,EACvDP,EAAS,oBAAoB,QAASM,CAAmB,EAE7D,CAGA,eAAeS,EAAYC,EAAY,CACnC,GAAI,CACA,MAAMC,EAAW,sCACXC,EAAW,YACX,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,IAAI,GAAGH,CAAQ,IAAIC,CAAQ,IAAIF,CAAU,EAAE,EACxE,OAAOG,CACV,OAAQE,EAAK,CACV,QAAQ,MAAMA,CAAG,CACpB,CACL,CAwHA,MAAMC,EAAc,UACdC,EAAgB,UAChBC,EAAQ,SAAS,iBAAiB,eAAe,EACvDA,EAAM,QAAQ,CAACC,EAAMC,IAAU,CACzBA,EAAQ,WACVD,EAAK,MAAM,KAAOH,EAElBG,EAAK,MAAM,KAAOF,CAEtB,CAAC"}