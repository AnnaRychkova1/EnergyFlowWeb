{"version":3,"file":"favorites-8c3127d5.js","sources":["../../src/js/favorites.js"],"sourcesContent":["import icons from '/assets/symbol-defs.svg';\r\nimport { renderModalMenu } from '/js/modal-menu.js';\r\nimport { refs } from '/js/templates/refs.js';\r\nimport createScrollFavorites from '/js/services/scrollFavorites.js';\r\nimport { hide, show, hideLoader, showLoader } from '/js/services/visibility';\r\nimport { errorResult } from '/js/services/iziToast.js';\r\n\r\n// Create favorites list\r\n\r\nconst favorites = localStorage.getItem('favorites');\r\nconst favoriteList = JSON.parse(favorites);\r\n\r\ncreateFavoritesGallery();\r\n\r\nasync function createFavoritesGallery() {\r\n  showLoader(refs.loaderModal);\r\n  try {\r\n    if (!Array.isArray(favoriteList) || favoriteList.length === 0) {\r\n      show(refs.favoritesMessage);\r\n      return;\r\n    }\r\n\r\n    if (refs.favoritesMessage) {\r\n      hide(refs.favoritesMessage);\r\n    }\r\n\r\n    refs.favoritesGallery.innerHTML = '';\r\n\r\n    createMarkupFavorites(favoriteList);\r\n\r\n    createScrollFavorites();\r\n  } catch (error) {\r\n    errorResult('Error creating favorites gallery');\r\n  } finally {\r\n    hideLoader(refs.loaderModal);\r\n  }\r\n}\r\n\r\nfunction createMarkupFavorites(favoriteList) {\r\n  const markup = favoriteList\r\n    .map(({ _id, bodyPart, name, target, burnedCalories, time }) => {\r\n      return `\r\n       <li class=\"favorites-gallery-item\" data-id=\"${_id}\" id=\"card-${_id}\">\r\n\r\n        <div class=\"favorites-card-top\">\r\n          <div class=\"favorites-workout-block\">\r\n            <div class=\"workout\">Workout</div>\r\n            <button type=\"button\" data-id=${_id} class=\"favorites-remove-btn\">\r\n              <svg class=\"favorites-remove-icon\" width=\"16\" height=\"16\">\r\n                <use href=\"${icons}#icon-basket\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <button class=\"to-favorites-start\" type=\"click\" data-id=${_id}>\r\n            <span data-id=${_id}>Start</span>\r\n            <svg data-id=${_id} class=\"filtered-start\" width=\"16\" height=\"16\">\r\n              <use href=\"${icons}#icon-arrow-right\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"card-box-title\">\r\n          <div class=\"filtered-athlete-box\">\r\n            <svg class=\"filtered-athlete\" width=\"16\" height=\"16\">\r\n              <use href=\"${icons}#icon-Man\"></use>\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"filtered-title\">${\r\n            name.charAt(0).toUpperCase() + name.slice(1)\r\n          }</h3>\r\n        </div>\r\n\r\n         <ul class=\"filtered-description\">\r\n          <li class=\"filtered-descr-item\">\r\n            <p class=\"filtered-descr-title\">Burned calories: <span class=\"filtered-descr-value\">${burnedCalories} / ${time} min</span></p>\r\n          </li>\r\n          <li class=\"filtered-descr-item\">\r\n            <p class=\"filtered-descr-title\">Body part: <span class=\"filtered-descr-value\">${\r\n              bodyPart.charAt(0).toUpperCase() + bodyPart.slice(1)\r\n            }</span></p>\r\n          </li>\r\n          <li class=\"filtered-descr-item\">\r\n            <p class=\"filtered-descr-title\">Target: <span class=\"filtered-descr-value\">${\r\n              target.charAt(0).toUpperCase() + target.slice(1)\r\n            }</span></p>\r\n          </li>\r\n        </ul>\r\n\r\n       </li>`;\r\n    })\r\n    .join('');\r\n  if (refs.favoritesGallery) {\r\n    refs.favoritesGallery.insertAdjacentHTML('beforeend', markup);\r\n  }\r\n\r\n  function addRemoveButtonListeners() {\r\n    const removeButtons = document.querySelectorAll('.favorites-remove-btn');\r\n\r\n    removeButtons.forEach(button => {\r\n      button.addEventListener('click', handleRemoveFavorite);\r\n    });\r\n  }\r\n  addRemoveButtonListeners();\r\n\r\n  function addStartButtonListenners() {\r\n    const startButtons = document.querySelectorAll('.to-favorites-start');\r\n\r\n    startButtons.forEach(button => {\r\n      button.addEventListener('click', handleStartButtons);\r\n    });\r\n  }\r\n\r\n  addStartButtonListenners();\r\n}\r\n\r\nasync function handleRemoveFavorite(event) {\r\n  const button = event.currentTarget;\r\n  const id = button.getAttribute('data-id');\r\n\r\n  showLoader(refs.loaderModal);\r\n  try {\r\n    // Delete card\r\n    const removedCard = document.getElementById(`card-${id}`);\r\n    if (removedCard) {\r\n      removedCard.remove();\r\n    }\r\n\r\n    // Update favoriteList in LocalStorage\r\n    const updatedFavorites = favoriteList.filter(item => item._id !== id);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n\r\n    // Update favoritesList in the page\r\n    favoriteList.splice(\r\n      favoriteList.findIndex(item => item._id === id),\r\n      1\r\n    );\r\n\r\n    if (favoriteList.length === 0) {\r\n      show(refs.favoritesMessage);\r\n    }\r\n  } catch (error) {\r\n    errorResult('Error updating favorites list');\r\n  } finally {\r\n    hideLoader(refs.loaderModal);\r\n  }\r\n}\r\n\r\nasync function handleStartButtons(event) {\r\n  const button = event.currentTarget;\r\n  const id = button.getAttribute('data-id');\r\n  showLoader(refs.loaderModal);\r\n  try {\r\n    await renderModalMenu(id);\r\n  } catch (error) {\r\n    errorResult('Error creating modal menu');\r\n  } finally {\r\n    hideLoader(refs.loaderModal);\r\n  }\r\n}\r\n"],"names":["favorites","favoriteList","createFavoritesGallery","showLoader","refs","show","hide","createMarkupFavorites","createScrollFavorites","errorResult","hideLoader","markup","_id","bodyPart","name","target","burnedCalories","time","icons","addRemoveButtonListeners","button","handleRemoveFavorite","addStartButtonListenners","handleStartButtons","event","id","removedCard","updatedFavorites","item","renderModalMenu"],"mappings":"uTASA,MAAMA,EAAY,aAAa,QAAQ,WAAW,EAC5CC,EAAe,KAAK,MAAMD,CAAS,EAEzCE,IAEA,eAAeA,GAAyB,CACtCC,EAAWC,EAAK,WAAW,EAC3B,GAAI,CACF,GAAI,CAAC,MAAM,QAAQH,CAAY,GAAKA,EAAa,SAAW,EAAG,CAC7DI,EAAKD,EAAK,gBAAgB,EAC1B,MACD,CAEGA,EAAK,kBACPE,EAAKF,EAAK,gBAAgB,EAG5BA,EAAK,iBAAiB,UAAY,GAElCG,EAAsBN,CAAY,EAElCO,GACD,MAAe,CACdC,EAAY,kCAAkC,CAClD,QAAY,CACRC,EAAWN,EAAK,WAAW,CAC5B,CACH,CAEA,SAASG,EAAsBN,EAAc,CAC3C,MAAMU,EAASV,EACZ,IAAI,CAAC,CAAE,IAAAW,EAAK,SAAAC,EAAU,KAAAC,EAAM,OAAAC,EAAQ,eAAAC,EAAgB,KAAAC,KAC5C;AAAA,qDACwCL,CAAG,cAAcA,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,4CAK7BA,CAAG;AAAA;AAAA,6BAElBM,CAAK;AAAA;AAAA;AAAA;AAAA,oEAIkCN,CAAG;AAAA,4BAC3CA,CAAG;AAAA,2BACJA,CAAG;AAAA,2BACHM,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAQLA,CAAK;AAAA;AAAA;AAAA,uCAIpBJ,EAAK,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAK,MAAM,CAAC,CAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,kGAKuFE,CAAc,MAAMC,CAAI;AAAA;AAAA;AAAA,4FAI5GJ,EAAS,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAS,MAAM,CAAC,CACpD;AAAA;AAAA;AAAA,yFAICE,EAAO,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAO,MAAM,CAAC,CAChD;AAAA;AAAA;AAAA;AAAA,aAKR,EACA,KAAK,EAAE,EACNX,EAAK,kBACPA,EAAK,iBAAiB,mBAAmB,YAAaO,CAAM,EAG9D,SAASQ,GAA2B,CACZ,SAAS,iBAAiB,uBAAuB,EAEzD,QAAQC,GAAU,CAC9BA,EAAO,iBAAiB,QAASC,CAAoB,CAC3D,CAAK,CACF,CACDF,IAEA,SAASG,GAA2B,CACb,SAAS,iBAAiB,qBAAqB,EAEvD,QAAQF,GAAU,CAC7BA,EAAO,iBAAiB,QAASG,CAAkB,CACzD,CAAK,CACF,CAEDD,GACF,CAEA,eAAeD,EAAqBG,EAAO,CAEzC,MAAMC,EADSD,EAAM,cACH,aAAa,SAAS,EAExCrB,EAAWC,EAAK,WAAW,EAC3B,GAAI,CAEF,MAAMsB,EAAc,SAAS,eAAe,QAAQD,CAAE,EAAE,EACpDC,GACFA,EAAY,OAAM,EAIpB,MAAMC,EAAmB1B,EAAa,OAAO2B,GAAQA,EAAK,MAAQH,CAAE,EACpE,aAAa,QAAQ,YAAa,KAAK,UAAUE,CAAgB,CAAC,EAGlE1B,EAAa,OACXA,EAAa,UAAU2B,GAAQA,EAAK,MAAQH,CAAE,EAC9C,CACN,EAEQxB,EAAa,SAAW,GAC1BI,EAAKD,EAAK,gBAAgB,CAE7B,MAAe,CACdK,EAAY,+BAA+B,CAC/C,QAAY,CACRC,EAAWN,EAAK,WAAW,CAC5B,CACH,CAEA,eAAemB,EAAmBC,EAAO,CAEvC,MAAMC,EADSD,EAAM,cACH,aAAa,SAAS,EACxCrB,EAAWC,EAAK,WAAW,EAC3B,GAAI,CACF,MAAMyB,EAAgBJ,CAAE,CACzB,MAAe,CACdhB,EAAY,2BAA2B,CAC3C,QAAY,CACRC,EAAWN,EAAK,WAAW,CAC5B,CACH"}