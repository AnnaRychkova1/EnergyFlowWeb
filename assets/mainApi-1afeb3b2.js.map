{"version":3,"file":"mainApi-1afeb3b2.js","sources":["../../src/js/exercises-details.js","../../src/js/services/mainApi.js"],"sourcesContent":["\nimport Pagination from 'tui-pagination'; \nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport axios from 'axios';\n\n//import { BASE_URL } from \"./services/mainApi.js\";\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nimport { hide, show, showLoader, hideLoader } from \"./services/visibility\";\nimport { refs } from './templates/refs.js';\nimport { searchExerciseByFilters } from \"./services/mainApi.js\";\nimport isiToast from './services/isiToast.js';\n\n\n// https://energyflow.b.goit.study/api/exercises?bodypart=waist&muscles=abs&equipment=assisted&keyword=side&page=1&limit=10\n\n// import { filterExercise, nameExercise} from './exercises';\n\nconst filterExercise = 'bodypart';\nconst nameExercise = 'waist';\n\n\n\nconst queryParams = {\n  filter: nameExercise,\n  keyword: '',\n  page: 1,\n  limit: 9,\n};\n\n// Create modal temporarely\n\n// refs.toStartBtn.addEventListener('click', createModal);\n\n// function createModal(evt) {\n//   const idFilter = evt.target.dataset.id;\n\n//   //request by id\n// }\n\n// refs.toStartBtn.addEventListener('click', createModal);\n\n// function createModal(evt) {\n//   const idFilter = evt.target.dataset.id;\n\n//   // request by id \n// }\n\n// async function createModal(evt) {\n  \n//   try {\n\n//     const { results } = await \n\n//     const { results } = await cohkjjhklh\n\n//     console.log(results);\n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n//     alert('Wrong request')\n//   }\n// }\n\nrefs.exercisesHeader.textContent = `/${nameExercise}`;\nrefs.textResult.classList.add(\"is-hidden\");\n\nasync function renderExerciseByFilter() {\n\n  show(refs.searchForm)\n  showLoader(refs.loaderModal);\n  // hide(refs.pagi);\n  \n  queryParams.page = 1;\n\n  if (!queryParams.filter) {\n    isiToast.noResults();\n    show(refs.textResult);\n    hideLoader(refs.loaderModal);\n    return\n  }\n\n  // searchExerciseByFilters({ filter, name });\n\n  try {\n    const { results, totalPages } = await searchExerciseByFilters(queryParams);\n    console.log(results);\n    console.log(totalPages);\n\n    //! there's the same if !queryParams.filter\n    // if (!results || totalPages === 0) {\n    //   isiToast.noResults();\n    //   show(refs.textResult);\n    //   hideLoader(refs.loaderModal);\n    //   return\n    // }\n\n    if (totalPages > 1) {\n      createPagination(totalPages);\n      renderMoreExercises();\n      } else {\n      isiToast.endOfSearch();\n    }\n\n    // if (results.length > 0 && results.length !== totalPages)\n    renderItemsMarkup(results, refs.resultContainer);\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    isiToast.apiIsiToastError();\n    console.error('Error fetching request:', error);\n  } finally {\n    hideLoader(refs.loaderModal);\n    //! removeListener from another person\n  }\n}\n\nasync function renderMoreExercises() {\n  // showLoader(refs.pagi)\n  // refs.pagi.addEventListener('click', renderMoreExercises);\n  showLoader(refs.loaderModal);\n  queryParams.page += 1;\n\n  try {\n    const { results, totalPages } = await searchExerciseByFilters(queryParams);\n    renderItemsMarkup(results, refs.resultContainer);\n    console.log(totalPages);\n    \n    if (totalPages > 1) {\n      createPagination(totalPages);\n    } else {\n      isiToast.endOfSearch();\n    }\n\n    // const elementHeight = document.querySelector('.gallery-item').getBoundingClientRect().height;\n    // window.scrollBy({\n    //   top: 1.7 * elementHeight,\n    //   behavior: 'smooth',\n    // })\n\n  } catch (error) {\n    console.error('Error fetching request:', error);\n    isiToast.apiIsiToastError();\n  } finally {\n    //! refs.resultContainer.innerHTML = '';  need or not\n    hideLoader(refs.loaderModal);\n    if (queryParams.page === queryParams.totalPages) {\n      isiToast.endOfSearch();  \n      // refs.pagi.removeEventListener('click', renderMoreExercises);      \n    }\n\n  }\n\n}\n\n\nrefs.searchForm.addEventListener('submit', handleSearch);\nrefs.resultContainer.innerHTML = '';\n\nasync function handleSearch(event) {\n  event.preventDefault();\n\n  refs.resultContainer.innerHTML = '';\n  \n  queryParams.page = 1;\n\n  const formQuery = event.currentTarget;\n    queryParams.keyword = formQuery.elements.query.value.trim();\n    console.log(queryParams.keyword);\n\n  if (!queryParams.keyword) {\n    alert('Empty value')\n    return;\n  }\n\n  try {\n    console.log(queryParams);\n      const { results, totalPages } = await searchExerciseByFilters(queryParams);\n\n    const getQuery = (results, toQuery) =>\n    results.filter(result => result.name.includes(toQuery));\n\n      console.log(getQuery(results, queryParams.keyword)); \n      \n\nconsole.log(totalPages);\n\n      renderItemsMarkup(results, refs.resultContainer);\n      \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    alert('Wrong request')\n  } finally {\n    refs.searchForm.reset();\n    hideLoader(refs.loaderModal);\n  }\n}\n\nfunction renderItemsMarkup(results, resultContainer) {\n  const markup = results\n    .map(\n      ({ _id, rating, name, burnedCalories, time, bodyPart, target }) => `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n            </div>\n          </div>\n          <button type=\"submit\" data-id=${_id} class=\"to-favorites-start\">Start</button><a/>\n        </div>\n        <div class=\"card-box-title\">\n          <img class=\"filteered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n          <h3 class=\"filteered-title\">${name}</h3>\n        </div>\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n          </li>\n        </ul>  \n  </li>\n  `\n    )\n    .join('');\n\n  resultContainer.insertAdjacentHTML('beforeend', markup);\n}\n\n\n// currentPage, ul, li \nfunction createPagination(totalPages) {\n  // Створіть новий екземпляр пагінації з використанням поточних налаштувань та totalPages\n  const instance = new Pagination(refs.pagi, { \n    totalItems: totalPages, // Кількість елементів, які будуть розділені по сторінках\n    itemsPerPage: 9, // Кількість елементів на одній сторінці\n    visiblePages: 3, // Кількість видимих сторінок в пагінації\n    page: queryParams.page, // Початкова сторінка\n    centerAlign: true, // Вирівнювання пагінації по центру\n    template: {\n      page: '<a class=\"tui-pagination-btn\">{{page}}</a>',\n      currentPage: '<strong class=\"tui-pagination-btn tui-pagination-active\">{{page}}</strong>',\n      moveButton: '<a class=\"tui-pagination-btn tui-pagination-control\"></a>',\n      disabledMoveButton: '<a class=\"tui-pagination-btn tui-pagination-control disabled\"></a>',\n      moreButton: '<a class=\"tui-pagination-btn tui-pagination-ellipsis\" aria-label=\"More\"></a>'\n    }\n  });\n}\n\nfunction updatePagination(totalPages) {\n  // Створіть новий екземпляр пагінації з використанням поточних налаштувань та totalPages\n  const instance = new Pagination(refs.pagi, { \n    totalItems: totalPages, // Кількість елементів, які будуть розділені по сторінках\n    itemsPerPage: 9, // Кількість елементів на одній сторінці\n    visiblePages: 6, // Кількість видимих сторінок в пагінації\n    page: 1, // Початкова сторінка\n    centerAlign: true, // Вирівнювання пагінації по центру\n    template: {\n      page: '<a class=\"tui-pagination-btn\">{{page}}</a>',\n      currentPage: '<strong class=\"tui-pagination-btn tui-pagination-active\">{{page}}</strong>',\n      moveButton: '<a class=\"tui-pagination-btn tui-pagination-control\"></a>',\n      disabledMoveButton: '<a class=\"tui-pagination-btn tui-pagination-control disabled\"></a>',\n      moreButton: '<a class=\"tui-pagination-btn tui-pagination-ellipsis\" aria-label=\"More\"></a>'\n    }\n  });\n}\n\nexport { renderExerciseByFilter };\n\nrenderExerciseByFilter();\n\n\n//! createModal\n// refs.toStartBtn.addEventListener('sudmit', createModal);\n  \n  //! removeListener another developer\n\n// async function createModal(evt) {\n//   try {\n//     const { results } = await renderModal();\n//     console.log(results);\n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n//     alert('Wrong request')\n//   }\n// }\n\n//! Pagination\n//import Pagination from 'tui-pagination'; \n\n// const pagi = document.getElementById('tui-pagination-container');\n// const instance = new Pagination(pagi, { \n//   totalItems: 19, // Загальна кількість елементів, які будуть розділені по сторінках\n//   itemsPerPage: 9, // Кількість елементів на одній сторінці\n//   visiblePages: 6, // Кількість видимих сторінок в пагінації\n//   page: 1, // Початкова сторінка\n//   centerAlign: true, // Вирівнювання пагінації по центру\n//   template: {\n//     // Налаштування шаблону кнопок пагінації\n//     page: '<a class=\"tui-pagination-btn\">{{page}}</a>',\n//     currentPage: '<strong class=\"tui-pagination-btn tui-pagination-active\">{{page}}</strong>',\n//     moveButton:\n//       '<a class=\"tui-pagination-btn tui-pagination-control\"></a>',\n//     disabledMoveButton:\n//       '<a class=\"tui-pagination-btn tui-pagination-control disabled\"></a>',\n//     moreButton:\n//       '<a class=\"tui-pagination-btn tui-pagination-ellipsis\" aria-label=\"More\"></a>'\n//   }\n//  });\n\n// instance.getCurrentPage();\n\n//Finish pagination\n\n// async function renderExerciseByFilter() {\n\n//   try {\n//     const { results, totalPages } = await searchExerciseByFilters(queryParams);\n//     console.log(results);\n//     console.log(totalPages);\n    \n//     if (results.length > 0 && results.length !== totalPages) {\n//       createPagination(totalPages);\n//     } else {\n//       isiToast.endOfSearch();\n//     }\n\n\n//     renderItemsMarkup(results, refs.resultContainer);\n      \n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n    \n//   } finally {\n      \n//   }\n// }\n\nexport { filterExercise, nameExercise };\n","import axios from 'axios';\nimport { filterExercise, nameExercise } from '../exercises-details';\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\n\nconst ENDPOINT_QUOTE = 'quote';\nconst ENDPOINT_FILTER = 'exercises';\n\nasync function fetchQuoteFromServer() {\n  try {\n    const response = await axios.get(`${BASE_URL}/${ENDPOINT_QUOTE}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nasync function searchExerciseByFilters({ keyword, page = 1, limit }) {\n  const response = await axios\n  .get(`https://energyflow.b.goit.study/api/exercises`, {\n    params: { \n      [filterExercise]: nameExercise,\n        keyword: keyword,\n        limit,\n        page,\n          },\n      })\n  return response.data;\n}\n\nexport { fetchQuoteFromServer, searchExerciseByFilters };"],"names":["filterExercise","nameExercise","queryParams","refs","renderExerciseByFilter","show","showLoader","isiToast","hideLoader","results","totalPages","searchExerciseByFilters","createPagination","renderMoreExercises","renderItemsMarkup","error","handleSearch","event","formQuery","toQuery","result","resultContainer","markup","_id","rating","name","burnedCalories","time","bodyPart","target","Pagination","BASE_URL","ENDPOINT_QUOTE","fetchQuoteFromServer","axios","keyword","page","limit"],"mappings":"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"}