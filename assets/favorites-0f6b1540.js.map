{"version":3,"file":"favorites-0f6b1540.js","sources":["../../src/js/favorites.js"],"sourcesContent":["import axios from 'axios';\r\nimport { refs } from './templates/refs.js';\r\n// import { handleClickOnCardStart } from './exercises-details.js';\r\n// import { onClickCardContent } from './modal-menu.js';\r\n\r\n\r\n// Getting items from the LS\r\nconst LS_KEY_FAVORITES = 'favorites';\r\nconst itemsFromLS = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n\r\n// Creating a plug when the LS is empty\r\nconst markupMessageBlock =\r\n  '<div class=\"favorites-message-block\"></div> <div class=\"plug-icon\"><img class=\"favorites-box-img\" src=\"./img/icons/dumbbell.png\" alt=\"dumbbell\"/></div><div class=\"favorites-box-paragraf\"></div>It appears that you have not added any exercises to your  favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</div></div>';\r\n\r\nfunction showMessageBlock() {\r\n  refs.messageBlock.innerHTML = markupMessageBlock;\r\n}\r\n\r\n\r\nconst test = document.querySelector('.favorites-btn');      \r\n\r\ntest.addEventListener('click', handleClickOnCardStart);\r\nconsole.log(test);\r\nconsole.log(handleClickOnCardStart());\r\n\r\n\r\n// Creating gallery of favorite exersises\r\n\r\nif (!itemsFromLS) {\r\n  showMessageBlock();\r\n\r\n} else if (!itemsFromLS || !Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n  showMessageBlock();\r\n  console.log('No items found in local storage or data is invalid.');\r\n\r\n} else if (itemsFromLS.length > 0) {\r\n  createGalleryFromLS(itemsFromLS);\r\n  \r\n  refs.onRemoveBtn.forEach(button => {button.addEventListener('click', removeFromLS)});      \r\n  //  chooseButtonForModal();\r\n  // addRemoveScroll();\r\n}\r\n    \r\n \r\nfunction createMarkupFavorites(data) {\r\n  markupArray.innerHTML = data\r\n    .map(\r\n      ({ _id, bodyPart, name, target, burnedCalories, time }) => {\r\n        return `\r\n        <li class=\"favorites-gallery-item\" data-id=\"${_id}\" id=\"card-${_id}\">\r\n           <div class=\"favorites-item\">\r\n              <div class=\"favorites-item-wrapper\">\r\n                <span class=\"workout\">WORKOUT</span>\r\n                <button type=\"button\" data-id=${_id} data-favorites-remove class=\"favorites-remove-btn\"></button>\r\n                  <svg class=\"favorites-remove-icon\" width=\"12\" height=\"13\">\r\n                    <use href=\"../img/icons/symbole-defs.svg#icon-basket\"></use>\r\n                  </svg>\r\n                </button>\r\n                <a href=\"/src/partials/modal-menu.html\" class=\"favorites-start\" data-id=\"${_id} data-modal-open\"></a> \r\n                  <span>Start</span>\r\n                  <svg class=\"favorites-start-icon\" width=\"14\" height=\"14\">\r\n                    <use href=\"../img/icons/symbole-defs.svg#icon-line\"></use>\r\n                  </svg>\r\n                </a>\r\n              </div>\r\n              <div class=\"favorites-item-info\">\r\n                <div class=\"favorites-man-icon\">\r\n                  <svg class=\"icon-Man\" width=\"14\" height=\"14\">\r\n                    <use href=\"../img/icons/symbol-defs.svg#icon-Man\"\"></use>\r\n                  </svg>\r\n                  <h3 class=\"favorites-item-title\">${name.charAt(0).toUpperCase() + name.slice(1)}</h3>\r\n                </div>\r\n              </div>\r\n              <div class=\"favorites-item-info-wrapper\">\r\n                <ul class=\"favorites-gallery-info\">\r\n                  <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"favorites-item-value\">${burnedCalories} / ${time} min</span></li>\r\n                  <li class=\"favorites-gallery-info-item\">Body part: <span class=\"favorites-item-value\">${bodyPart.charAt(0).toUpperCase() + bodyPart.slice(1)}</span></li>\r\n                  <li class=\"favorites-gallery-info-item\">Target: <span class=\"favorites-item-value\">${target.charAt(0).toUpperCase() + target.slice(1)}</span></li>\r\n                </ul>\r\n              </div>\r\n           </div>\r\n        </li>`})\r\n    .join('');\r\n  refs.messageBlock.innerHTML = '';\r\n  refs.messageBlock.prepend(markupArray);\r\n}\r\n  \r\n\r\n// Removing an exersise from the array stored in LS\r\n\r\nasync function removeObjectFromLocalStorage(idToRemove) {\r\n  try {\r\n    const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n\r\n        if (!Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n          console.log('Array in local storage is empty or does not exist.');\r\n          return;\r\n        }\r\n    \r\n        itemsFromLS = itemsFromLS.filter(item => item._id !== idToRemove);\r\n       \r\n        localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(itemsFromLS));\r\n        console.log(`Object with ID ${idToRemove} removed from local storage.`);\r\n        \r\n        refs.onRemoveBtn.removeEventListener('click', removeObjectFromLocalStorage);      \r\n             \r\n        await refreshGallery();\r\n    \r\n    storedArray = storedArray.filter(item => item._id !== idToRemove);\r\n    localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(storedArray));\r\n    console.log(`Object with ID ${idToRemove} removed from local storage.`);\r\n    await refreshGallery();\r\n  } catch (error) {\r\n    console.error('Error removing object from local storage:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Scroll an element into view\r\n// function showScroll() {\r\n// const scrollElement = document.getElementById('targetElementId');\r\n// element.scrollIntoView({\r\n//   behavior: 'smooth', // Optional: 'auto' or 'smooth'\r\n//   block: 'start',     // Optional: 'start', 'center', 'end', or 'nearest'\r\n//   inline: 'start'     // Optional: 'start', 'center', 'end', or 'nearest'\r\n// });\r\n//   if ()\r\n//     refs.favoritesGallery.scrollTo({\r\n//       top: refs.favoritesGallery.scrollHeight,\r\n//       behavior: 'smooth',\r\n//     }\r\n// }\r\n// function hideScrollForFavorites() {\r\n//   favoritesGallery.classList.remove('scroll-on');\r\n//   favoritesGallery.classList.remove('padding-for-scroll-list');\r\n//   document\r\n//     .querySelector('.favor-wrapper')\r\n//     .classList.remove('padding-for-scroll-container');\r\n// }\r\n  \r\n/// Create the Favorites page\r\n\r\n\r\n\r\nasync function createGalleryFromLS(event) {\r\n  event.preventDefault();\r\n  \r\n  refs.favoritesGallery.innerHTML = '';\r\n  refs.favoritesMessage.style.display = 'none';\r\n  \r\n  try {\r\n    const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n    \r\n\r\n    refs.favoritesGallery.insertAdjacentHTML(\"afterbegin\", createMarkupFavorites(itemsFromLS));\r\n    \r\n    if (itemsFromLS > 9) {\r\n      scrollBy(); \r\n    }\r\n    refs.onRemoveBtn.forEach.addEventListener('click', removeObjectFromLocalStorage);      \r\n    refs.onStartBtn.forEach.addEventListener('click', handleStartButtonClick);\r\n\r\n    } catch (error) {\r\n      console.error('Error creating gallery from local storage:', error);\r\n    } finally {\r\n      console.log();\r\n      await refreshGallery();\r\n    }\r\n  }\r\n\r\n\r\n    // Refresh the gallery by updating the displayed items\r\nasync function refreshGallery() {\r\n  refs.favoritesMessage.style.display = 'none';\r\n    \r\n  try {\r\n    const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n        \r\n    if (!Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n      console.log('Array in local storage is empty or does not exist.');\r\n      refs.favoritesMessage.style.display = 'block';\r\n\r\n    }\r\n       \r\n    refs.favoritesGallery.innerHTML = '';\r\n\r\n    itemsFromLS.forEach(itemsFromLS => {\r\n      refs.favoritesGallery.insertAdjacentHTML('afterbegin', createMarkupFavorites(itemsFromLS));\r\n        \r\n      refs.onRemoveBtn.forEach.addEventListener('click', removeObjectFromLocalStorage);\r\n      refs.onStartBtn.forEach.addEventListener('click', handleStartButtonClick);\r\n    });\r\n   } catch (error) {\r\n      console.error('Error creating gallery from local storage:', error);\r\n    } finally {\r\n      console.log();\r\n      await refreshGallery();\r\n    }\r\n}\r\n  //====================================\r\n// const LS_KEY_QUOTE = 'quoteResponse';\r\n// const quoteFromLS = JSON.parse(localStorage.getItem(LS_KEY_QUOTE));\r\n// console.log(quoteFromLS);\r\n\r\n// function displayQuoteOnPage(quoteData) {\r\n//   const quoteText = document.querySelector('.quote-text');\r\n//   const quoteAuthor = document.querySelector('.quote-author');\r\n//   quoteText.textContent = quoteData.quote;\r\n//   quoteAuthor.textContent = quoteData.author;\r\n// }\r\n\r\n// // Favorites gallery\r\n\r\n// const BASE_URL_FAVORITES = 'https://energyflow.b.goit.study/api/exersises/';\r\n\r\n// async function searchExerciseByID({ id}) {\r\n//   const response = await axios.get(\r\n//     `${BASE_URL_FAVORITES}`,\r\n//     {\r\n//       params: {\r\n//         _id: id,\r\n//       },\r\n//     }\r\n//   );\r\n//   return response.data;\r\n// }\r\n\r\n\r\n// /// Create the Favorites page\r\n\r\n// const LS_KEY_FAVORITES = 'favorites';\r\n\r\n\r\n// async function createGalleryFromLS(event) {\r\n//   event.preventDefault();\r\n  \r\n//   refs.favoritesGallery.innerHTML = '';\r\n//   refs.favoritesMessage.style.display = 'none';\r\n  \r\n//   try {\r\n//     const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n//     if (\r\n//       !itemsFromLS ||\r\n//       !Array.isArray(itemsFromLS) ||\r\n//       itemsFromLS.length === 0\r\n//     ) {\r\n//       console.log('No items found in local storage or data is invalid.');\r\n//       refs.favoritesMessage.style.display = 'block';\r\n//     }\r\n\r\n//     refs.favoritesGallery.insertAdjacentHTML(\"afterbegin\", createMarkupFavorites(itemsFromLS));\r\n    \r\n//     if (itemsFromLS > 9) {\r\n//       scrollBy();\r\n//     }\r\n//     refs.onRemoveBtn.forEach.addEventListener('click', removeObjectFromLocalStorage);\r\n//     refs.onStartBtn.forEach.addEventListener('click', handleStartButtonClick);\r\n\r\n//     } catch (error) {\r\n//       console.error('Error creating gallery from local storage:', error);\r\n//     } finally {\r\n//       console.log();\r\n//       await refreshGallery();\r\n//     }\r\n//   }\r\n\r\n\r\n//     // Refresh the gallery by updating the displayed items\r\n//   async function refreshGallery() {\r\n//     refs.favoritesMessage.style.display = 'none';\r\n    \r\n//       try {\r\n//         const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n        \r\n//         if (!Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n//           console.log('Array in local storage is empty or does not exist.');\r\n//           refs.favoritesMessage.style.display = 'block';\r\n//       }\r\n       \r\n//       refs.favoritesGallery.innerHTML = '';\r\n\r\n//       itemsFromLS.forEach(itemsFromLS => {\r\n//         refs.favoritesGallery.insertAdjacentHTML('afterbegin', createMarkupFavorites(itemsFromLS));\r\n        \r\n//         refs.onRemoveBtn.forEach.addEventListener('click', removeObjectFromLocalStorage);\r\n//         refs.onStartBtn.forEach.addEventListener('click', handleStartButtonClick);\r\n//       });\r\n\r\n//       console.log('Gallery refreshed successfully.');\r\n//     } catch (error) {\r\n//       console.error('Error refreshing gallery:', error);\r\n//     }\r\n//   }\r\n\r\n//     // Scroll for container favorites-gallery for desktop and tablet\r\n//     function scrollBy() {\r\n//       refs.favoritesGallery.scrollTo({\r\n//         top: refs.favoritesGallery.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     }\r\n  \r\n\r\n// // Remove an exersise from an array stored in local storage\r\n\r\n// async function removeObjectFromLocalStorage(idToRemove) {\r\n//   try {\r\n//     const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n\r\n//         if (!Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n//           console.log('Array in local storage is empty or does not exist.');\r\n//           return;\r\n//         }\r\n    \r\n//         itemsFromLS = itemsFromLS.filter(item => item._id !== idToRemove);\r\n       \r\n//         localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(itemsFromLS));\r\n//         console.log(`Object with ID ${idToRemove} removed from local storage.`);\r\n        \r\n//         refs.onRemoveBtn.removeEventListener('click', removeObjectFromLocalStorage);\r\n             \r\n//         await refreshGallery();\r\n    \r\n//     storedArray = storedArray.filter(item => item._id !== idToRemove);\r\n//     localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(storedArray));\r\n//     console.log(`Object with ID ${idToRemove} removed from local storage.`);\r\n//     await refreshGallery();\r\n//   } catch (error) {\r\n//     console.error('Error removing object from local storage:', error);\r\n//   }\r\n// }\r\n\r\n\r\n//===================================================================================\r\n\r\n// Add to Favorites after click on button 'Add to Favotites' at Modal\r\n\r\n//  refs.addToFavoritesBtn.addEventListener('click', addItemToFavorites);\r\n\r\n//   async function addItemToFavorites(event) {\r\n//     event.preventDefault();\r\n\r\n//     const element = event.target.closest(\".ex-add-btn\");\r\n//     const elementId = element.dataset.id;\r\n//       try {\r\n//         const exercise = await searchExerciseByID(elementId);\r\n//         let favorites = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES)) || [];\r\n//         const isDuplicate = favorites.some(favorite => favorite._id === exercise._id);\r\n\r\n//         if (!isDuplicate) {\r\n//            favorites.push(exercise);\r\n//            localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(favorites));\r\n//            await refreshGallery();\r\n//            console.log(\"Exercise added to favorites:\", exercise);\r\n//         } else {\r\n//            console.log(\"Exercise is already in favorites.\");\r\n//         }\r\n//     } catch (error) {\r\n//       console.error(\"Error adding exercise to favorites:\", error);\r\n//       apiIsiToastError();\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// After click  \"Start\" arrow\r\n// function handleStartButtonClick(event) {\r\n//   event.preventDefault();\r\n//   // Open the modal\r\n//   // onClickCardContent();\r\n        \r\n//   refs.onStartBtn.removeEventListener('click', handleStartButtonClick);\r\n// }\r\n\r\n// function createMarkupFavorites({ _id, bodyPart, name, target, burnedCalories, time }) {\r\n//       let isAdded = false;\r\n//       const favorites = localStorage.getItem(LS_KEY_FAVORITES);\r\n\r\n//       if (favorites) {\r\n//         const favoritesFromLS = JSON.parse(favorites);\r\n//         isAdded = favoritesFromLS.some(item => item._id === _id);\r\n//       }\r\n//       return `\r\n//         <li class=\"favorites-gallery-item\">\r\n//             <span class=\"workout\">workout</span>\r\n//             <a class=\"favorites-remove\" href=\"#\">\r\n//                 <button class=\"favorites-remove-btn\" type=\"button\">\r\n//                     <img class=\"favorites-remove-icon\" src=\"../img/icons/symbole-defs.svg#icon-basket\" alt=\"icon-basket\"/>\r\n//                 </button>\r\n//             </a>\r\n//             <a class=\"favorites-start\" href=\"#\">\r\n//                 <button class=\"favorites-start-btn\" type=\"button\">Start\r\n//                     <img class=\"favorites-start-icon\" src=\"../img/icons/symbole-defs.svg#icon-line\" alt=\"start-icon\"/>\r\n//                 </button>\r\n//             </a>\r\n//             <img class=\"favorites-man-icon\" src=\"../img/icons/symbol-defs.svg#icon-Man\" alt=\"man-icon\"/>\r\n//             <h3 class=\"favorites-item-title\">${name}</h3>\r\n//             <ul class=\"favorites-gallery-info\">\r\n//                 <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"descr-span\">${burnedCalories} / ${time} min</span></li>\r\n//                 <li class=\"favorites-gallery-info-item\">Body part: <span class=\"descr-span\">${bodyPart}</span></li>\r\n//                 <li class=\"favorites-gallery-info-item\">Target: <span class=\"descr-span\">${target}</span></li>\r\n//             </ul>\r\n//         </li>`;\r\n//     }\r\n\r\n// function createMarkupFavorites(data) {\r\n//   const markup = data.map(\r\n//     ({ _id, bodyPart, name, target, burnedCalories, time }) => `\r\n//         <li class=\"favorites-gallery-item\" data-id=\"${_id}\" id=\"card-${_id}\">\r\n//            <div class=\"favorites-item\">\r\n//               <div class=\"favorites-item-wrapper\">\r\n//                 <span class=\"workout\">WORKOUT</span>\r\n//                 <button class=\"favorites-remove-btn\">\r\n//                   <svg class=\"favorites-remove-icon\" width=\"12\" height=\"13\">\r\n//                     <use href=\"../img/icons/symbole-defs.svg#icon-basket\"></use>\r\n//                   </svg>\r\n//                 </button>\r\n//                 <a class=\"favorites-start\" href=\"\" data-id=\"${_id}\">\r\n//                   <span>Start</span>\r\n//                   <svg class=\"favorites-start-icon\" width=\"14\" height=\"14\">\r\n//                     <use href=\"../img/icons/symbole-defs.svg#icon-line\"></use>\r\n//                   </svg>\r\n//                 </a>\r\n//               </div>\r\n//               <div class=\"favorites-item-info\">\r\n//                 <div class=\"favorites-man-icon\">\r\n//                   <svg class=\"icon-Man\" width=\"14\" height=\"14\">\r\n//                     <use href=\"../img/icons/symbol-defs.svg#icon-Man\"\"></use>\r\n//                   </svg>\r\n//                   <h3 class=\"favorites-item-title\">${name.charAt(0).toUpperCase() + name.slice(1)}</h3>\r\n//                 </div>\r\n//               </div>\r\n//               <div class=\"favorites-item-info-wrapper\">\r\n//                 <ul class=\"favorites-gallery-info\">\r\n//                   <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"descr-span\">${burnedCalories} / ${time} min</span></li>\r\n//                   <li class=\"favorites-gallery-info-item\">Body part: <span class=\"descr-span\">${bodyPart.charAt(0).toUpperCase() + bodyPart.slice(1)}</span></li>\r\n//                   <li class=\"favorites-gallery-info-item\">Target: <span class=\"descr-span\">${target.charAt(0).toUpperCase() + target.slice(1)}</span></li>\r\n//                 </ul>\r\n//               </div>\r\n//            </div>\r\n//         </li>`)\r\n//     .join('');\r\n//   }\r\n\r\n\r\n  \r\n"],"names":["LS_KEY_FAVORITES","itemsFromLS","markupMessageBlock","showMessageBlock","refs","test","createGalleryFromLS","button","createMarkupFavorites","data","_id","bodyPart","name","target","burnedCalories","time","removeObjectFromLocalStorage","idToRemove","item","refreshGallery","error","event"],"mappings":"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"}