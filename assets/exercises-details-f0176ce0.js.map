{"version":3,"file":"exercises-details-f0176ce0.js","sources":["../../src/js/exercises-details.js"],"sourcesContent":["import axios from 'axios';\nimport { hide, show, showLoader, hideLoader } from './services/visibility';\nimport { refs } from './templates/refs.js';\nimport isiToast from './services/isiToast.js';\nimport { createModalMenu } from './modal-menu.js';\nimport icons from '/img/icons/symbol-defs.svg';\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nconst ENDPOINT_EXERCISES = 'exercises';\n\nconst screenWidth = window.innerWidth;\n\nconst getParams = {\n  filter: '',\n  keyword: '',\n  page: 1,\n  limit: 9,\n};\n\nasync function renderExerciseByFilterName(expectedFilter, name) {\n  if (refs.exercisesGalleryEl) {\n    //hide(refs.subexercisesFilteredCards);\n    //hide(refs.subexercisesSearchForm);\n  }\n\n  if (screenWidth < 1440) {\n    getParams.limit = 8;\n  } else {\n    getParams.limit = 9;\n  }\n\n  let filter;\n\n  if (expectedFilter === 'Body parts') {\n    filter = 'bodypart';\n  } else if (expectedFilter === 'Muscles') {\n    filter = 'muscles';\n  } else if (expectedFilter === 'Equipment') {\n    filter = 'equipment';\n  }\n\n  if (!filter || !name) {\n    show(refs.subexercisesTextNoFound);\n    hideLoader(refs.loaderModal);\n    return;\n  }\n\n  show(refs.subexercisesSearchForm);\n  show(refs.subexercisesFilteredCards);\n  show(refs.exercisesSubtitle);\n  hide(refs.subexercisesTextNoFound);\n  refs.exercisesSubtitle.textContent = `${name}`;\n  refs.subexercisesFilteredCards.innerHTML = '';\n\n  try {\n    const { results, totalPages } = await searchExerciseByFilters({\n      filter: filter,\n      name: name,\n      keyword: getParams.keyword,\n      limit: getParams.limit,\n      page: getParams.page,\n    });\n\n    if (totalPages < 1) {\n      show(refs.subexercisesTextNoFound);\n      hideLoader(refs.loaderModal);\n      return;\n    }\n\n    renderCards(results);\n\n    // getParams.page += 1;\n\n    // if (!refs.subExercisesPaginationContainer) {\n    //   pagesPagination(getParams.page, totalPages);\n    // }\n  } catch (error) {\n    console.error('Error fetching images:', error);\n  } finally {\n    hideLoader(refs.loaderModal);\n  }\n\n  refs.subexercisesSearchForm.addEventListener('submit', handleSearch);\n\n  async function handleSearch(evt) {\n    evt.preventDefault();\n\n    if (refs.exercisesGalleryEl) {\n      //hide(refs.subexercisesFilteredCards);\n      //hide(refs.subexercisesSearchForm);\n    }\n\n    const formData = evt.currentTarget;\n    getParams.keyword = formData.elements.query.value.trim();\n\n    console.log(getParams.keyword);\n\n    if (!getParams.keyword) {\n      hideLoader(refs.loaderModal);\n      console.log('input keyword');\n    }\n\n    refs.subexercisesFilteredCards.innerHTML = '';\n    show(refs.subexercisesSearchForm);\n    hide(refs.subexercisesTextNoFound);\n    showLoader(refs.loaderModal);\n\n    try {\n      const { results, totalPages } = await searchExerciseByFilters({\n        filter: filter,\n        name: name,\n        keyword: getParams.keyword,\n        limit: getParams.limit,\n        page: getParams.page,\n      });\n\n      if (totalPages < 1) {\n        isiToast.noResults();\n        show(refs.subexercisesTextNoFound);\n        hideLoader(refs.loaderModal);\n        return;\n      }\n\n      // if (totalPages >= 2) {\n      //   pagesPagination(getParams.page, totalPages);\n      // }\n\n      renderCards(results);\n      // getParams.page += 1;\n\n      // if (!refs.subExercisesPaginationContainer) {\n      //   pagesPagination(getParams.page, totalPages);\n      // }\n    } catch (error) {\n      console.error('Error fetching request:', error);\n    } finally {\n      hideLoader(refs.loaderModal);\n      refs.subexercisesSearchForm.reset();\n      getParams.keyword = '';\n      refs.subexercisesSearchForm.removeEventListener('submit', handleSearch);\n    }\n  }\n}\n\nrefs.subexercisesFilteredCards.addEventListener(\n  'click',\n  handleClickOnCardStart\n);\n\n// request to modal window\nfunction handleClickOnCardStart(evt) {\n  if (!evt.target.dataset.id) {\n    return;\n  }\n\n  const exerciseId = evt.target.dataset.id;\n  // showLoader(refs.loaderModal);\n  createModalMenu(exerciseId);\n}\n\n// request to server\nasync function searchExerciseByFilters({ filter, name, keyword, limit, page }) {\n  const response = await axios.get(`${BASE_URL}/${ENDPOINT_EXERCISES}`, {\n    params: {\n      [filter]: name,\n      keyword: keyword,\n      limit: limit,\n      page: page,\n    },\n  });\n  return response.data;\n}\n\n// renderCards\nfunction renderCards(results) {\n  const markup = results.map(result => createCard(result)).join('');\n  refs.subexercisesFilteredCards.innerHTML = markup;\n}\n\n// create Card\nfunction createCard({\n  _id,\n  rating,\n  name,\n  burnedCalories,\n  time,\n  bodyPart,\n  target,\n}) {\n  return `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <svg class=\"filtered-star\" width=\"16\" height=\"16\">\n                <use href=\"${icons}#icon-Star-1\"></use>\n              </svg>\n            </div>\n          </div>\n          \n          <button class=\"to-favorites-start\" type=\"click\" data-id=${_id}>\n            <span data-id=${_id}>Start</span>\n            <svg data-id=${_id} class=\"filtered-start\" width=\"16\" height=\"16\">\n              <use href=\"${icons}#icon-arrow-right\"></use>\n            </svg>\n          </button> \n\n        </div>\n\n        <div class=\"card-box-title\">\n          <div class=\"filtered-athlete-box\">\n            <svg class=\"filtered-athlete\" width=\"16\" height=\"16\">\n              <use href=\"${icons}#icon-Man\"></use>\n            </svg>\n          </div>\n          <h3 class=\"filtered-title\">${name}</h3>\n        </div>\n\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value value-capitalized\">${\n              bodyPart.charAt(0).toUpperCase() + bodyPart.slice(1)\n            }</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value value-capitalized\">${\n              target.charAt(0).toUpperCase() + target.slice(1)\n            }</spam></p>\n          </li>\n        </ul>\n  </li>`;\n}\n\n// Pagination\n\nfunction pagesPagination(currentPage, totalPages) {\n  let disabledMoveButton = '';\n  const totalPagesToShow = Math.min(totalPages, 3);\n  const startPage = Math.max(1, currentPage - 1);\n\n  showLoader(refs.loaderModal);\n\n  for (let i = startPage; i < startPage + totalPagesToShow; i++) {\n    disabledMoveButton += `<button class=\"button-pagination\" type=\"button\">${i}</button>`;\n  }\n\n  hideLoader(refs.loaderModal);\n\n  return disabledMoveButton;\n}\n\nasync function onPaginationPages(event) {\n  currentPage = event.target.textContent;\n  // refs.subexercisesFilteredCards.innerHTML = '';\n  try {\n    const { totalPages } = await searchExerciseByFilters(results);\n    // renderCards(totalPages);\n    scrollToExerciseGallery();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { renderExerciseByFilterName };\n"],"names":["BASE_URL","ENDPOINT_EXERCISES","screenWidth","getParams","renderExerciseByFilterName","expectedFilter","name","refs","filter","show","hideLoader","hide","results","totalPages","searchExerciseByFilters","renderCards","error","handleSearch","evt","formData","showLoader","isiToast","handleClickOnCardStart","exerciseId","createModalMenu","keyword","limit","page","axios","markup","result","createCard","_id","rating","burnedCalories","time","bodyPart","target","icons"],"mappings":"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"}