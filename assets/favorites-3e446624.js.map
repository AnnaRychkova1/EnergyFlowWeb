{"version":3,"file":"favorites-3e446624.js","sources":["../../src/js/favorites.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { searchExerciseByID } from \"./services/mainApi.js\";\nimport { hide, show } from \"./services/visibility\";\nimport { refs } from \"./templates/refs.js\";\n// import { apiIsiToastError, noResults } from \"./services/isiToast.js\";\n\n\n//  Quote of Day\n\nconst quoteFromLS = JSON.parse(localStorage.getItem(\"quoteResponse\"));\nconsole.log(quoteFromLS);\n\nfunction displayQuoteOnPage(quoteData) {\n  const quoteText = document.querySelector('.quote-text');\n  const quoteAuthor = document.querySelector('.quote-author');\n  quoteText.textContent = quoteData.quote;\n  quoteAuthor.textContent = quoteData.author;\n}\n\n// Show Favorites Page\n\nshowFavoritesGallery();\n\n\n// Listeners\n\nrefs.addToFavoritesBtn.addEventListener('click', addToFavorites);\n// refs.onRemoveBtn.addEventListener(\"click\", removeFromFavorites);\n// refs.onStartBtn.addEventListener(\"click\", showModal);                //TODO depends on function at modal-menu.js\n\n\n// Add favorite exersise to LS \n\nasync function addToFavorites(event) {\n  event.preventDefault();\n\n  const element = event.target.closest(\".ex-add-btn\");\n  const elementId = element.dataset.id;\n  const favorites = localStorage.getItem('favorites');\n\n  \n  if (favorites) {\n    const favoritesFromLS = JSON.parse(favorites);\n    const predicate = favoritesFromLS.some(({ _id }) => _id === elementId);\n    \n    if (predicate) {\n      localStorage.setItem('favorites', JSON.stringify(favoritesFromLS.filter(({ _id }) => _id !== elementId))\n      );\n      element.innerHTML = addInnerHTML();\n    \n    } else {\n      const favoritesToLS = await searchExerciseByID(elementId);\n      localStorage.setItem(\"favorites\", JSON.stringify([...favoritesFromLS, favoritesToLS]));\n      element.innerHTML = addInnerHTML('remove');\n    \n    }\n  }\n}\n\n\n// Remove favorite exersise ftom LS\n\nasync function removeFromFavorites(event) {\n  event.preventDefault();\n  show(refs.favoritesMessage);\n\n  const element = event.target.closest(\".ex-add-btn\");\n  const elementId = element.dataset.id;\n  const favorites = localStorage.getItem(\"favorites\");\n\n  try {\n    const storedArray = JSON.parse(favorites);\n\n    if (Array.isArray(storedArray) && storedArray.length > 0) {\n      localStorage.removeItem(\"favorites\");\n      const newArray = storedArray.filter(({ _id }) => _id !== elementId);\n      localStorage.setItem(\"favorites\", JSON.stringify(newArray));\n      \n    } else {\n      // noResults();\n        console.log('Array in localStorage is empty or does not exist');\n    }\n\n  } catch (error) {\n     console.error(error);\n    //  apiIsiToastError();\n  \n  } finally {\n    console.log();\n    refs.favoritesGallery.reset();\n   }\n}\n\n\n// Show Favorites after choosing 'Favorites' at Header\nasync function showFavoritesGallery(event) {\n  refs.favoritesGallery.innerHTML = \"\";\n  hide(refs.favoritesMessage);\n\n  const favorites = localStorage.getItem(\"favorites\");\n     \n  if (!favorites) {\n    show(refs.favoritesMessage);\n    return;\n  }\n  \n  try {\n    const favoritesFromLS = await JSON.parse(localStorage.getItem(\"favorites\"));\n    refs.favoritesGallery.insertAdjacentHTML('afterbegin', createMarkupFavorites());\n                    \n    if (favoritesFromLS >= 9) {\n      scrollBy();\n    } else {\n      return;\n     \n    }\n  } catch (error) {\n    console.error(error);\n    // apiIsiToastError();\n    \n  } finally {\n      console.log();\n      refs.favoritesGallery.reset();\n    }\n  }\n\n\n\nfunction createMarkupFavorites({_id, bodyPart, name, target, burnedCalories, time,}) {\n  let isAdded = false;\n  const favorites = localStorage.getItem('favorites');\n\n  if (favorites) {\n    const favoritesFromLS = JSON.parse(favorites);\n    isAdded = favoritesFromLS.some(item => item._id === _id);\n  }\n\n  return `\n           <ul class=\"favorites-gallery\">\n             <li class=\"favorites-gallery-item\">\n                 <span class=\"workout\">workout</span>\n                 <a class=\"favorites-remove\" href=\"#\">\n                   <button class=\"favorites-remove-btn\" type=\"button\">\n                     <img class=\"favorites-remove-icon\" src=\"./img/icons/all icons/basket.svg\" alt=\"remove-icon\"/>\n                   </button>\n                 </a>\n                 <a class=\"favorites-start\" href=\"#\">\n                   <button class=\"favorites-start-btn\" type=\"button\">Start\n                     <img class=\"favorites-start-icon\" src=\"./img/icons/all icons/line.svg\" alt=\"start-icon\"/>\n                   </button>\n                 </a>\n                 <img class=\"favorites-man-icon\" src=\"../img/icons/all icons/Man.svg\" alt=\"man-icon\"/>\n                 <h3 class=\"favorites-item-title\">${name}</h3>\n                 <ul class=\"favorites-gallery-info\">\n                   <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"descr-span\">${burnedCalories} / ${time} min</span></li>\n                   <li class=\"favorites-gallery-info-item\">Body part: <span class=\"descr-span\">${bodyPart}</span></li>\n                   <li class=\"favorites-gallery-info-item\">Target: <span class=\"descr-span\">${target}</span></li>\n                 </ul>\n             </li>\n           </ul>`;\n}\n\nfunction scrollBy() {\n    window.scrollBy({\n      top:\n        2 *\n        document.querySelector('.favorites-gallery-item').getBoundingClientRect().height,\n      behavior: 'smooth',\n    });\n}\n\n//Add to Favorites after click on button 'Add to Favotites' at Modal\n// function addItemToFavorites(event) {\n//   event.preventDefault();\n  \n//   const LS_KEY_FAVORITES = \"Array of Favorites\";\n//   const arrayFavorites = event.currentTarget.elements.name.value();\n  \n//   searchExerciseByID();\n//   localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(arrayFavorites));\n// }\n  \n\n \n\n\n"],"names":["quoteFromLS","showFavoritesGallery","refs","addToFavorites","event","element","elementId","favorites","favoritesFromLS","_id","favoritesToLS","searchExerciseByID","hide","show","createMarkupFavorites","scrollBy","error","bodyPart","name","target","burnedCalories","time","item"],"mappings":"0MAWA,MAAMA,EAAc,KAAK,MAAM,aAAa,QAAQ,eAAe,CAAC,EACpE,QAAQ,IAAIA,CAAW,EAWvBC,IAKAC,EAAK,kBAAkB,iBAAiB,QAASC,CAAc,EAO/D,eAAeA,EAAeC,EAAO,CACnCA,EAAM,eAAc,EAEpB,MAAMC,EAAUD,EAAM,OAAO,QAAQ,aAAa,EAC5CE,EAAYD,EAAQ,QAAQ,GAC5BE,EAAY,aAAa,QAAQ,WAAW,EAGlD,GAAIA,EAAW,CACb,MAAMC,EAAkB,KAAK,MAAMD,CAAS,EAG5C,GAFkBC,EAAgB,KAAK,CAAC,CAAE,IAAAC,KAAUA,IAAQH,CAAS,EAGnE,aAAa,QAAQ,YAAa,KAAK,UAAUE,EAAgB,OAAO,CAAC,CAAE,IAAAC,CAAG,IAAOA,IAAQH,CAAS,CAAC,CAC7G,EACMD,EAAQ,UAAY,mBAEf,CACL,MAAMK,EAAgB,MAAMC,EAA4B,EACxD,aAAa,QAAQ,YAAa,KAAK,UAAU,CAAC,GAAGH,EAAiBE,CAAa,CAAC,CAAC,EACrFL,EAAQ,UAAY,aAAa,QAAQ,CAE1C,CACF,CACH,CAsCA,eAAeJ,EAAqBG,EAAO,CAMzC,GALAF,EAAK,iBAAiB,UAAY,GAClCU,EAAKV,EAAK,gBAAgB,EAItB,CAFc,aAAa,QAAQ,WAAW,EAElC,CACdW,EAAKX,EAAK,gBAAgB,EAC1B,MACD,CAED,GAAI,CACF,MAAMM,EAAkB,MAAM,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,EAG1E,GAFAN,EAAK,iBAAiB,mBAAmB,aAAcY,EAAuB,CAAA,EAE1EN,GAAmB,EACrBO,QAEA,OAGH,OAAQC,EAAO,CACd,QAAQ,MAAMA,CAAK,CAGvB,QAAY,CACN,QAAQ,IAAG,EACXd,EAAK,iBAAiB,OACvB,CACF,CAIH,SAASY,EAAsB,CAAC,IAAAL,EAAK,SAAAQ,EAAU,KAAAC,EAAM,OAAAC,EAAQ,eAAAC,EAAgB,KAAAC,GAAQ,CAEnF,MAAMd,EAAY,aAAa,QAAQ,WAAW,EAElD,OAAIA,GACsB,KAAK,MAAMA,CAAS,EAClB,KAAKe,GAAQA,EAAK,MAAQb,CAAG,EAGlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAe2CS,CAAI;AAAA;AAAA,uGAE+CE,CAAc,MAAMC,CAAI;AAAA,iGAC9BJ,CAAQ;AAAA,8FACXE,CAAM;AAAA;AAAA;AAAA,iBAIpG,CAEA,SAASJ,GAAW,CAChB,OAAO,SAAS,CACd,IACE,EACA,SAAS,cAAc,yBAAyB,EAAE,sBAAuB,EAAC,OAC5E,SAAU,QAChB,CAAK,CACL"}