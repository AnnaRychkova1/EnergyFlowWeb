{"version":3,"file":"mainApi-2bd397d3.js","sources":["../../src/js/templates/refs.js","../../src/js/exercises-details.js","../../src/js/services/mainApi.js"],"sourcesContent":["export const refs = {\n  //   add your refs\n\n\n\n  loaderModal: document.querySelector('.overlay'),\n  exercisesHeader: document.querySelector('.exersises-header'),\n  resultContainer: document.querySelector('.filtered-cards'),\n  searchForm: document.querySelector('.form'),\n  searchBtn: document.querySelector('.search-btn'),\n  textResult: document.querySelector('.exercise-text-no-found'),\n};\n","\nimport { hide, show, showLoader, hideLoader } from \"./services/visibility\";\nimport { refs } from './templates/refs.js';\n\nimport { BASE_URL } from \"./services/mainApi.js\";\n\nimport { searchExerciseByFilters } from \"./services/mainApi.js\";\n\n\n// https://energyflow.b.goit.study/api/exercises?bodypart=waist&muscles=abs&equipment=assisted&keyword=side&page=1&limit=10\n\n// import { filterExercise, nameExercise} from './exercises';\n\nconst filterExercise = 'bodypart';\nconst nameExercise = 'waist';\n\nexport { filterExercise, nameExercise };\n\nconst queryParams = {\n  filter: nameExercise,\n  keyword: '',\n  page: 1,\n  limit: 9,\n};\n\n// Create modal temporarely\n// refs.toStartBtn.addEventListener('sudmit', createModal);\n// async function createModal(evt) {\n//   try {\n//     const { results } = await renderModal();\n//     console.log(results);\n//   } catch (error) {\n//     console.error('Error fetching images:', error);\n//     alert('Wrong request')\n//   }\n// }\n\n\nrefs.exercisesHeader.textContent = `/${nameExercise}`;\nrefs.textResult.classList.add(\"is-hidden\");\nrenderExerciseByFilter();\n\nasync function renderExerciseByFilter(evt) {\n\n  try {\n    const { results, totalPages } = await searchExerciseByFilters(queryParams);\n    console.log(results);\n    console.log(totalPages);\n    \n    // if (results.length > 0 && results.length !== totalPages) {\n    //   refs.loadMoreBtn.addEventListener('click', handleLoadMore);\n    //   buttonService.show(refs.loadMoreBtn);\n    // } else {\n    //   isiToast.endOfSearch();\n    //   buttonService.hide(refs.loadMoreBtn);\n    //   buttonService.enableBtn(refs.searchBtn);\n    // }\n\n      renderItemsMarkup(results, refs.resultContainer);\n      // const lightbox = new SimpleLightbox('.filtered-cards a', {\n      //     captionsData: 'alt',\n      //     captionDelay: 250,\n      // });\n\n      // lightbox.refresh();\n      \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    alert('Wrong request')\n  } finally {\n      \n  }\n}\n\n\n\n\n\n\n\nrefs.searchForm.addEventListener('submit', handleSearch);\nrefs.resultContainer.innerHTML = '';\n\n\nasync function handleSearch(event) {\n  event.preventDefault();\n\n  refs.resultContainer.innerHTML = '';\n  \n  queryParams.page = 1;\n\n  const formQuery = event.currentTarget;\n    queryParams.keyword = formQuery.elements.query.value.trim();\n    console.log(queryParams.keyword);\n\n  if (!queryParams.keyword) {\n    alert('Empty value')\n    return;\n  }\n\n  try {\n    console.log(queryParams);\n      const { results, totalPages } = await searchExerciseByFilters(queryParams);\n\n    const getQuery = (results, toQuery) =>\n    results.filter(result => result.name.includes(toQuery));\n\n      console.log(getQuery(results, queryParams.keyword)); \n      \n\nconsole.log(totalPages);\n    // if (results.length > 0 && results.length !== totalPages) {\n    //   refs.loadMoreBtn.addEventListener('click', handleLoadMore);\n    //   buttonService.show(refs.loadMoreBtn);\n    // } else {\n    //   isiToast.endOfSearch();\n    //   buttonService.hide(refs.loadMoreBtn);\n    //   buttonService.enableBtn(refs.searchBtn);\n      // }\n\n      renderItemsMarkup(results, refs.resultContainer);\n      // const lightbox = new SimpleLightbox('.filtered-cards a', {\n      //     captionsData: 'alt',\n      //     captionDelay: 250,\n      // });\n\n      // lightbox.refresh();\n      \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    alert('Wrong request')\n  } finally {\n      refs.searchForm.reset();\n  }\n}\n\nfunction renderItemsMarkup(results, resultContainer) {\n  const markup = results\n    .map(\n      ({ _id, rating, name, burnedCalories, time, bodyPart, target }) => `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n            </div>\n          </div>\n          <button type=\"submit\" data-id=${_id} class=\"to-favorites-start\">Start</button><a/>\n        </div>\n        <div class=\"card-box-title\">\n          <img class=\"filteered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n          <h3 class=\"filteered-title\">${name}</h3>\n        </div>\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n          </li>\n        </ul>  \n  </li>\n  `\n    )\n    .join('');\n\n  resultContainer.insertAdjacentHTML('beforeend', markup);\n}","import axios from 'axios';\nimport { filterExercise, nameExercise } from '../exercises-details';\n\nexport const BASE_URL = 'https://energyflow.b.goit.study/api';\nconst END_POINT_QUOTE = 'quote';\nconst END_POINT_FILTER = 'exercises';\n\nasync function fetchQuoteFromServer() {\n  try {\n    const response = await axios.get(\n\n      `${BASE_URL}/${END_POINT_QUOTE}`\n\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nasync function searchExerciseByFilters({ keyword, page = 1, limit }) {\n  const response = await axios\n      .get(`${BASE_URL}/${END_POINT_FILTER}?${filterExercise}=${nameExercise}`, {\n        params: { \n        keyword: keyword,\n        limit,\n        page,\n          },\n      })\n  return response.data;\n}\n\nexport { fetchQuoteFromServer, searchExerciseByFilters };\n\n"],"names":["refs","filterExercise","nameExercise","queryParams","renderExerciseByFilter","evt","results","totalPages","searchExerciseByFilters","renderItemsMarkup","error","handleSearch","event","formQuery","toQuery","result","resultContainer","markup","_id","rating","name","burnedCalories","time","bodyPart","target","BASE_URL","END_POINT_QUOTE","END_POINT_FILTER","fetchQuoteFromServer","axios","keyword","page","limit"],"mappings":"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"}