{"version":3,"file":"favorites-f66dafa7.js","sources":["../../src/js/favorites.js"],"sourcesContent":["import axios from \"axios\";\n// import { apiIsiToastError } from './services/isiToast.js';\nimport { searchExerciseByID } from \"./services/mainApi.js\";\n// import { hide, show } from \"./services/visibility\";\nimport { refs } from \"./templates/refs.js\";\n// import { icons } from \"../img/icons/symbol-defs.svg\";\n\n//  Quote of Day\nconst LS_KEY_QUOTE = \"quoteResponse\";\nconst quoteFromLS = JSON.parse(localStorage.getItem(LS_KEY_QUOTE));\nconsole.log(quoteFromLS);\n\n\nfunction displayQuoteOnPage(quoteData) {\n  const quoteText = document.querySelector('.quote-text');\n  const quoteAuthor = document.querySelector('.quote-author');\n  quoteText.textContent = quoteData.quote;\n  quoteAuthor.textContent = quoteData.author;\n}\n\n/// Create Favorites page\n\nconst LS_KEY_FAVORITES = \"favorites\";\n\nasync function createGalleryFromLS(LS_KEY_FAVORITES, createMarkupFavorites) {\n  try {\n    const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\n\n    if (!itemsFromLS || !Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\n      console.log('No items found in local storage or data is invalid.');\n      apiIsiToastError();\n      return;\n    }\n        \n    refs.favoritesGallery.innerHTML = '';\n        \n    \n    refs.favoritesGallery.appendChild(refs.galleryItem);\n  \n\n  // if (itemsFromLS.length === 0) {\n  //   console.log(`There are no exercises in favorites.`);\n  //   apiIsiToastError();\n        \n  } catch (error) {\n    console.error('Error creating gallery from local storage:', error);\n  } finally {\n    console.log();\n refreshGallery();\n  }\n}\n\n\n// Refresh the gallery by updating the displayed items\nasync function refreshGallery() {\n    try {\n        const storedArray = JSON.parse(localStorage.getItem('favorites'));\n        if (!Array.isArray(storedArray) || storedArray.length === 0) {\n          console.log('Array in local storage is empty or does not exist.');\n          apiIsiToastError();\n            return;\n        }\n       \n        refs.favoritesGallery.innerHTML = '';\n\n        storedArray.forEach(item => {\n        const markup = createMarkupFavorites(item);\n\n        refs.favoritesGallery.insertAdjacentHTML('afterbegin', markup);\n        });\n\n        console.log('Gallery refreshed successfully.');\n    } catch (error) {\n      console.error('Error refreshing gallery:', error);\n      apiIsiToastError();\n    }\n}\n\n// Scroll for container favorites-gallery for desktop and tablet\nfunction scrollBy() {\n    refs.favoritesGallery.scrollTo({\n        top: refs.favoritesGallery.scrollHeight,\n        behavior: 'smooth',\n    });\n}\n\n// Remove an exersise from an array stored in local storage\n\nrefs.onRemoveBtn.addEventListener('click', removeObjectFromLocalStorage);\n\nasync function removeObjectFromLocalStorage(idToRemove) {\n    try {\n        let storedArray = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\n\n        if (!Array.isArray(storedArray) || storedArray.length === 0) {\n            console.log('Array in local storage is empty or does not exist.');\n            return;\n        }\n        storedArray = storedArray.filter(item => item._id !== idToRemove);\n        localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(storedArray));\n        console.log(`Object with ID ${idToRemove} removed from local storage.`);\n        await refreshGallery();\n    } catch (error) {\n        console.error('Error removing object from local storage:', error);\n    }\n}\n\n\n// Add to Favorites after click on button 'Add to Favotites' at Modal\n\n//  refs.addToFavoritesBtn.addEventListener('click', addItemToFavorites);\n\n//   async function addItemToFavorites(event) {\n//     event.preventDefault();\n\n//     const element = event.target.closest(\".ex-add-btn\");\n//     const elementId = element.dataset.id;\n//       try {\n//         const exercise = await searchExerciseByID(elementId);\n//         let favorites = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES)) || [];\n//         const isDuplicate = favorites.some(favorite => favorite._id === exercise._id);\n\n//         if (!isDuplicate) {\n//            favorites.push(exercise);\n//            localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(favorites));\n//            await refreshGallery();\n//            console.log(\"Exercise added to favorites:\", exercise);\n//         } else {\n//            console.log(\"Exercise is already in favorites.\");\n//         }\n//     } catch (error) {\n//       console.error(\"Error adding exercise to favorites:\", error);\n//       apiIsiToastError();\n//     }\n// }\n\n\nrefs.onStartBtn.addEventListener('click', handleStartButtonClick);\n// After click  \"Start\" arrow\nfunction handleStartButtonClick(event) {\n    event.preventDefault();\n    // Open the modal\n    openModal();\n}\n\nfunction openModal() {\n    const modal = document.querySelector('.modal');\n    modal.classList.add('open');\n}\n\n\nfunction createMarkupFavorites(data) {\n  return data\n    .map(\n      i =>\n        `\n        <li class=\"favorites-gallery-item\" data-id=\"${i._id}\" id=\"card-${i._id}\">\n           <p class=\"favorites-item-head\">\n              <span class=\"favorites-item-head-wrapper\">\n                <span class=\"workout\">WORKOUT</span>\n                  <button class=\"favorites-remove-btn\">\n                    <svg class=\"favorites-remove-icon\" width=\"12\" height=\"13\">\n                      <use href=\"${icons}#icon-basket\"></use>\n                    </svg>\n                  </button>\n                  <a class=\"ex-item-start\" href=\"\" data-id=\"${i._id}\">\n                    <span>Start</span>\n                     <svg class=\"favorites-arrow-icon\" width=\"14\" height=\"14\">\n                      <use href=\"${icons}#icon-line\"></use>\n                    </svg>\n                  </a>\n             </p>\n              <span class=\"favorites-item-title\">\n                <span class=\"favorites-man-icon\"><svg class=\"ex-icon-run\" width=\"14\" height=\"14\">\n                  <use href=\"${icons}#icon-Man\"></use>\n                </svg>\n              </span>\n              \n            <h3 class=\"favorites-item-title\">${\n              i.name.charAt(0).toUpperCase() + i.name.slice(1)\n            }</h3>\n            </span>\n            </span>\n            <p class=\"favorites-item-info\">\n             <span class=\"ex-info-group\"><span class=\"favorites-item-desc\">Burned calories:</span> <span\n                class=\"favorites-item-value\">${i.burnedCalories} / ${\n          i.time\n        } min</span>\n        </span>\n        <span class=\"favorites-info-group\"><span class=\"favorites-item-desc\">Body part:</span> <span\n                class=\"favorites-item-value\">${\n                  i.bodyPart.charAt(0).toUpperCase() + i.bodyPart.slice(1)\n                }</span>\n        </span>\n        <span class=\"favorites-info-group\"><span class=\"favorites-item-desc\">Target:</span> <span\n                class=\"favorites-item-value\">${\n                  i.target.charAt(0).toUpperCase() + i.target.slice(1)\n                }</span>\n        </span>\n    </p>\n</li>\n        `\n    )\n    .join('');\n}\n// function createMarkupFavorites({ _id, bodyPart, name, target, burnedCalories, time }) {\n//       let isAdded = false;\n//       const favorites = localStorage.getItem(LS_KEY_FAVORITES);\n\n//       if (favorites) {\n//         const favoritesFromLS = JSON.parse(favorites);\n//         isAdded = favoritesFromLS.some(item => item._id === _id);\n//       }\n//       return `\n//         <li class=\"favorites-gallery-item\">\n//             <span class=\"workout\">workout</span>\n//             <a class=\"favorites-remove\" href=\"#\">\n//                 <button class=\"favorites-remove-btn\" type=\"button\">\n//                     <img class=\"favorites-remove-icon\" src=\"../img/icons/symbole-defs.svg#icon-basket\" alt=\"icon-basket\"/>\n//                 </button>\n//             </a>\n//             <a class=\"favorites-start\" href=\"#\">\n//                 <button class=\"favorites-start-btn\" type=\"button\">Start\n//                     <img class=\"favorites-start-icon\" src=\"../img/icons/symbole-defs.svg#icon-line\" alt=\"start-icon\"/>\n//                 </button>\n//             </a>\n//             <img class=\"favorites-man-icon\" src=\"../img/icons/symbol-defs.svg#icon-Man\" alt=\"man-icon\"/>\n//             <h3 class=\"favorites-item-title\">${name}</h3>\n//             <ul class=\"favorites-gallery-info\">\n//                 <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"descr-span\">${burnedCalories} / ${time} min</span></li>\n//                 <li class=\"favorites-gallery-info-item\">Body part: <span class=\"descr-span\">${bodyPart}</span></li>\n//                 <li class=\"favorites-gallery-info-item\">Target: <span class=\"descr-span\">${target}</span></li>\n//             </ul>\n//         </li>`;\n//     }\n"],"names":["LS_KEY_QUOTE","quoteFromLS","LS_KEY_FAVORITES","refreshGallery","storedArray","refs","item","markup","createMarkupFavorites","error","removeObjectFromLocalStorage","idToRemove","handleStartButtonClick","event","openModal","data","i"],"mappings":"qKAQA,MAAMA,EAAe,gBACfC,EAAc,KAAK,MAAM,aAAa,QAAQD,CAAY,CAAC,EACjE,QAAQ,IAAIC,CAAW,EAYvB,MAAMC,EAAmB,YAgCzB,eAAeC,GAAiB,CAC5B,GAAI,CACA,MAAMC,EAAc,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,EAChE,GAAI,CAAC,MAAM,QAAQA,CAAW,GAAKA,EAAY,SAAW,EAAG,CAC3D,QAAQ,IAAI,oDAAoD,EAChE,mBACE,MACH,CAEDC,EAAK,iBAAiB,UAAY,GAElCD,EAAY,QAAQE,GAAQ,CAC5B,MAAMC,EAASC,EAAsBF,CAAI,EAEzCD,EAAK,iBAAiB,mBAAmB,aAAcE,CAAM,CACrE,CAAS,EAED,QAAQ,IAAI,iCAAiC,CAChD,OAAQE,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChD,kBACD,CACL,CAYAJ,EAAK,YAAY,iBAAiB,QAASK,CAA4B,EAEvE,eAAeA,EAA6BC,EAAY,CACpD,GAAI,CACA,IAAIP,EAAc,KAAK,MAAM,aAAa,QAAQF,CAAgB,CAAC,EAEnE,GAAI,CAAC,MAAM,QAAQE,CAAW,GAAKA,EAAY,SAAW,EAAG,CACzD,QAAQ,IAAI,oDAAoD,EAChE,MACH,CACDA,EAAcA,EAAY,OAAOE,GAAQA,EAAK,MAAQK,CAAU,EAChE,aAAa,QAAQT,EAAkB,KAAK,UAAUE,CAAW,CAAC,EAClE,QAAQ,IAAI,kBAAkBO,CAAU,8BAA8B,EACtE,MAAMR,EAAc,CACvB,OAAQM,EAAO,CACZ,QAAQ,MAAM,4CAA6CA,CAAK,CACnE,CACL,CAgCAJ,EAAK,WAAW,iBAAiB,QAASO,CAAsB,EAEhE,SAASA,EAAuBC,EAAO,CACnCA,EAAM,eAAc,EAEpBC,GACJ,CAEA,SAASA,GAAY,CACH,SAAS,cAAc,QAAQ,EACvC,UAAU,IAAI,MAAM,CAC9B,CAGA,SAASN,EAAsBO,EAAM,CACnC,OAAOA,EACJ,IACCC,GACE;AAAA,sDAC8CA,EAAE,GAAG,cAAcA,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAM3C,KAAK;AAAA;AAAA;AAAA,8DAGsBA,EAAE,GAAG;AAAA;AAAA;AAAA,mCAGhC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMT,KAAK;AAAA;AAAA;AAAA;AAAA,+CAKtBA,EAAE,KAAK,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,KAAK,MAAM,CAAC,CAChD;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKkCA,EAAE,cAAc,MACrDA,EAAE,IACH;AAAA;AAAA;AAAA,+CAISA,EAAE,SAAS,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,SAAS,MAAM,CAAC,CACxD;AAAA;AAAA;AAAA,+CAICA,EAAE,OAAO,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,OAAO,MAAM,CAAC,CACpD;AAAA;AAAA;AAAA;AAAA,SAKZ,EACA,KAAK,EAAE,CACZ"}