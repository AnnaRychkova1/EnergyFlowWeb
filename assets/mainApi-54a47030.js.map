{"version":3,"file":"mainApi-54a47030.js","sources":["../../src/js/modal-menu.js","../../src/js/exercises-details.js","../../src/js/exercises.js","../../src/js/services/mainApi.js"],"sourcesContent":["import { exerciseId } from './exercises-details';\nimport axios from 'axios';\nimport { hideLoader } from './services/visibility';\n\n// , getLoader\nconst gallery = document.querySelector('.results'); // плюс название содержимого карточки //\nconst backdrop = document.querySelector('.backdrop');\nconst modalCard = document.querySelector('.modal');\nconst favorites = document.querySelector('.ex-add-favorite');\nconst heartIcon = `\n// <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n//     <use href=\"${symbol-defs}#icon-heart\"></use>\n// </svg>`;\n\n\nrenderCard();\nlet storage = 'favorites';\nlet storageItem = localStorage.getItem(storage);\nif (!storageItem) {\n    storageItem = [];\n} else {\n    storageItem = JSON.parse(storageItem);\n}\n\n// gallery.addEventListener('click', onClickCardContent);\n// async function onClickCardContent(event) {\n//     if (event.target === event.currentTarget) {\n//         return;\n//     }\n//     const element = event.target.closest('.favorites-start'); // название li элемента содержимого карточки //\n//     if (element === null) {\n//         return;\n//     }\n//     getLoader();\n//     const elementId = element.dataset.id;\n//     const exercisesInfo = await getCardInfo(elementId);\n\n//     backdrop.classList.remove('is-hidden');\n//   modalCard.innerHTML = '';\n//   hideLoader();\n// }\n  const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n  addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n  const closeBtn = document.querySelector('.modal-close-btn');\n  closeBtn.addEventListener('click', onCloseModal);\n  backdrop.addEventListener('click', handleBackdropClick);\n  document.addEventListener('keydown', handleEscapeKey);\n \nasync function addToFavoriteOnClick(event) {\n  const element = event.target.closest('.ex-add-favorite');\n  if (!element) return;\n\n  const elementId = element.dataset.id;\n  const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  const isFavorite = favorites.some(item => item._id === elementId);\n\n  if (isFavorite) {\n    const updatedFavorites = favorites.filter(item => item._id !== elementId);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    element.classList.remove('is-favorite');\n    element.innerHTML = changingButtonName('add');\n  } else {\n    const exercisesCardInfo = await getCardInfo(elementId);\n    localStorage.setItem('favorites', JSON.stringify([...favorites, exercisesCardInfo]));\n    element.classList.add('is-favorite');\n    element.innerHTML = changingButtonName('remove');\n  }\n}\nfunction onCloseModal() {\n  modalCard.classList.add('is-hidden');\n  backdrop.classList.add('is-hidden');\n  modalCard.innerHTML = '';\n\n  document.removeEventListener('keydown', handleEscapeKey);\n  backdrop.removeEventListener('click', handleBackdropClick);\n}\nfunction handleBackdropClick(event) {\n  if (event.target.closest('.modal')) {\n    return;\n  }\n  modalCard.classList.add('is-hidden');\n  backdrop.classList.add('is-hidden');\n  modalCard.innerHTML = '';\n\n  document.removeEventListener('keydown', handleEscapeKey);\n  backdrop.removeEventListener('click', handleBackdropClick);\n}\nfunction handleEscapeKey(event) {\n  event.preventDefault();\n  if (event.key === 'Escape') {\n    modalCard.classList.add('is-hidden');\n    backdrop.classList.add('is-hidden');\n    modalCard.innerHTML = '';\n\n    document.removeEventListener('keydown', handleEscapeKey);\n    backdrop.removeEventListener('click', handleBackdropClick);\n  }\n}\n\n// const exerciseId = '64f389465ae26083f39b17c0';\nasync function getCardInfo(exerciseId) {\n    try {\n        const BASE_URL = 'https://energyflow.b.goit.study/api';\n        const ENDPOINT = 'exercises';\n        const { data } = await axios.get(`${BASE_URL}/${ENDPOINT}/${exerciseId}`);\n        return data;\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n\n\nfunction changingButtonName(value = 'add') {\n  if (value === 'add') {\n    return `Add to favorites\n        <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n          <use href=\"${heartIcon}#icon-heart\"></use>\n        </svg>`;\n  } else {\n    return `Remove from\n        <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n          <use href=\"${heartIcon}#icon-heart\"></use>\n        </svg>`;\n  }\n}\n\nasync function renderCard() {\n    try {\n        const results = await getCardInfo(exerciseId);\n        modalWindowMarkup(results);\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nfunction modalWindowMarkup(results) {\n    const markup = results\n        .map(({\n            _id,\n            bodyPart,\n            equipment,\n            gifUrl,\n            name,\n            target,\n            description,\n            rating,\n            burnedCalories,\n            time,\n            popularity,\n        }) =>\n            `<div class=\"modal\">\n      <button class=\"modal-close-btn\">\n        <svg\n          class=\"modal-close-icon\"\n          width=\"24\"\n          height=\"24\"\n          aria-label=\"close icon\"\n        >\n          <use\n            class=\"ex-close-btn-icon-use\"\n            href=\"../img/icons/all icons/x.svg\"\n          ></use>\n        </svg>\n      </button>\n      <div class=\"exercise-gif\">\n        <img\n          src=\"${gifUrl}\"\n          class=\"gif-ex\"\n          width=\"295\"\n          height=\"258\"\n          alt=\"show exercise\"\n        />\n      </div>\n      <div class=\"ex-content-container\">\n        <h2 class=\"exercise-name\">${name}</h2>\n        <p class=\"ex-current-rating\">${rating}</p>\n        <ul class=\"exercise-stars-list\">\n          ${renderStars(rating)}\n        </ul>\n\n        <div class=\"exercise-information\">\n          <div class=\"ex-block\">\n            <span class=\"exercise-value\">Targer</span>\n            <span class=\"exercise-label ex-target\">${target}</span>\n          </div>\n          <div class=\"ex-block\">\n            <span class=\"exercise-value\">Body part</span>\n            <span class=\"exercise-label ex-body-part\">${bodyPart}</span>\n          </div>\n          <div class=\"ex-block\">\n            <span class=\"exercise-value\">Equipment</span>\n            <span class=\"exercise-label ex-equipment\">${equipment}</span>\n          </div>\n          <div class=\"ex-block\">\n            <span class=\"exercise-value\">Popular</span>\n            <span class=\"exercise-label ex-popular\">${popularity}</span>\n          </div>\n          <div class=\"ex-block\">\n            <span class=\"exercise-value\">Burned calories</span>\n            <span class=\"exercise-label ex-burned-calories\">${burnedCalories}/3 min</span>\n          </div>\n\n          <p class=\"exercise-description\">\n            ${description}\n          </p>\n\n          <div class=\"ex-add-btn\">\n            <button class=\"add-btn-icon\">\n              Add to favorites\n              <svg\n                class=\"heart-svg\"\n                width=\"18\"\n                height=\"18\"\n                aria-label=\"favorites icon\"\n              >\n                <use href=\"../img/icons/all icons/heart.svg\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>`\n        )\n        .join('');\n    modalCard.innerHTML = markup;\n}\n\nfunction renderStars(rating) {\n    const filledStar = '<svg class=\"ex-rate-icon\" width=\"18\" height=\"18\" aria-label=\"rating icon\"><use href=\"../img/icons/all_icons/Star 1.svg\"></use></svg>';\n    const emptyStar = '<svg class=\"ex-rate-icon\" width=\"18\" height=\"18\" aria-label=\"rating icon\"><use href=\"../img/icons/all_icons/Star 2.svg\"></use></svg>';\n    const filledStars = filledStar.repeat(rating);\n    const emptyStars = emptyStar.repeat(5 - rating);\n    return filledStars + emptyStars;\n}\n\n\nexport { getCardInfo, renderCard }\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n// }\n// const startBtn = document.querySelector('.start-btn');\n// const modalEl = document.querySelector('.modal-backdrop');\n\n// startBtn.addEventListener('click', handleSearch);\n\n// function handleSearch(event) {\n//   event.preventDefault();\n//   fetchExercises().then(modalWindowMarkup).catch();\n// }\n\n// function fetchExercises() {\n//   return fetch(\n//     'https://energyflow.b.goit.study/api/exercises/64f389465ae26083f39b17a2'\n//   ).then(resp => {\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   });\n// }\n\n// function modalWindowMarkup(filters = {}) {\n//   const {\n//     _id,\n//     bodyPart,\n//     equipment,\n//     time,\n//     target,\n//     burnedCalories,\n//     gifUrl,\n//     name,\n//     popularity,\n//     rating,\n//     description,\n//   } = filters;\n\n//   const markup = `<div class=\"exercises-modal-window\">\n//           <div class=\"exercise-container\">\n//             <button class=\"exercise-close-btn\" type=\"button\">\n//               <svg\n//                 class=\"exercise-close-icon\"\n//                 width=\"10\"\n//                 height=\"10\"\n//                 aria-label=\"Close icon\"\n//               >\n//                 <use href=\"../svg/icons.svg#icon-close-btn\"></use>\n//               </svg>\n//             </button>\n//             <div class=\"exercise-image-wrapper\">\n//               <img\n//                 src=\"${gifUrl}\"\n//                 alt=\"\"\n//                 class=\"exercise-image-modal\"\n//               />\n//             </div>\n//             <div class=\"exercise-info-wrapper\">\n//               <div class=\"exercise-name-container\">\n//                 <p class=\"exercise-name\">${name}</p>\n//                 <p class=\"exercise-rating\">${rating}</p>\n//               </div>\n//               <div class=\"exercise-params-container\">\n//                 <ul class=\"exercise-params-list\">\n//                   <li class=\"exercise-params-card\">\n//                     <p class=\"exercise-param-name\">Target</p>\n//                     <p class=\"exercise-param-value exercise-param-target\">${target}</p>\n//                   </li>\n//                   <li class=\"exercise-params-card\">\n//                     <p class=\"exercise-param-name\">Body part</p>\n//                     <p class=\"exercise-param-value exercise-param-bodypart\">${bodyPart}</p>\n//                   </li>\n//                   <li class=\"exercise-params-card\">\n//                     <p class=\"exercise-param-name\">Equipment</p>\n//                     <p class=\"exercise-param-value exercise-param-equipment\">${equipment}</p>\n//                   </li>\n//                   <li class=\"exercise-params-card\">\n//                     <p class=\"exercise-param-name\">Popular</p>\n//                     <p class=\"exercise-param-value exercise-param-popularuty\">${popularity}</p>\n//                   </li>\n//                   <li class=\"exercise-params-card\">\n//                   <p class=\"exercise-param-name\">Burned calories</p>\n//                   <p class=\"exercise-param-value exercise-param-popularuty\">${burnedCalories}/${time} m</p></li>\n//                 </ul>\n                \n//               </div>\n//               <p class=\"exercise-descr\">${description}</p>\n//               <div class=\"exercise-buttons\">\n//                 <button\n//                   class=\"exercise-favorite-btn\"\n//                   type=\"submit\"\n//                   data=\"${_id}\"\n//                 >\n//                   Add to favorites\n//                   <svg\n//                   class=\"exercise-fav-icon\"\n//                   aria-label=\"Heart icon\"\n//                   >\n//                   <use href=\"../svg/icons.svg#icon-heart\"></use>\n//                   </svg>\n//                 </button>\n//                 <button class=\"exercise-raiting-btn\" type=\"submit\" data=\"${_id}\">\n//                   Give a rating\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>`;\n\n//   modalEl.innerHTML = markup;\n// }","// ! imports\nimport Pagination from 'tui-pagination'; \n// import 'tui-pagination/dist/tui-pagination.min.css';\nimport axios from 'axios';\nimport { hide, show, showLoader, hideLoader } from \"./services/visibility\";\nimport { refs } from './templates/refs.js';\nimport { searchExerciseByFilters } from \"./services/mainApi.js\";\nimport isiToast from './services/isiToast.js';\n// import { exercisesParamFilter, exercisesParamName } from '../exercises'; - wait for push\nimport { getCardInfo, renderCard} from './modal-menu.js';\n\n// ! add listeners\nrefs.searchForm.addEventListener('submit', handleSearch);\n\nconst paginationContainer = document.getElementById('pagination-container');\npaginationContainer.addEventListener('click', handlePagination);\n\n// ! temporarely consts\nconst exercisesParamFilter = \"bodypart\";\n// const exercisesParamFilter = \"muscles\";\n// const exercisesParamFilter = \"equipment\";\nconst exercisesParamName = 'waist';\n// const exercisesParamName = 'barbell';\n\nlet exerciseId;\nlet startButtonFavorite;\n\nconst queryParams = {\n  filter: exercisesParamName,\n  keyword: '',\n  page: 1,\n  limit: 9,\n  totalItems : 0,\n};\n\n// ! work with title\nrefs.exercisesHeader.textContent = `/${exercisesParamName}`;\n\n// ! Function for create modal\nfunction handleStartExerciseByClick(evt) {\n  exerciseId = evt.currentTarget.dataset.id;\n  console.log(exerciseId);\n  show(refs.backdrop);\n  renderCard(exerciseId);                 \n  // startExerciseButton.removeEventListener();\n}\n\n// const startExerciseButton = document.querySelector('.to-favorites-start');\n// startExerciseButton.addEventListener('click', handleStartExerciseByClick);\n\n// ! Василина викликає мою функцію renderExerciseByFilter();\nrenderExerciseByFilter();\nasync function renderExerciseByFilter() {\n\n  refs.resultContainer.innerHTML = '';\n\n  show(refs.searchForm)\n  showLoader(refs.loaderModal);\n  \n  queryParams.page = 1;\n\n  if (!queryParams.filter) {\n    isiToast.noResults();\n    show(refs.textResult);\n    hideLoader(refs.loaderModal);\n    return\n  }\n\n  try {\n    const { results, totalPages } = await searchExerciseByFilters(queryParams);\n    console.log(results);\n    console.log(totalPages);\n\n    // there's the same if !queryParams.filter\n    if (!results || totalPages === 0) {\n      isiToast.noResults();\n      show(refs.textResult);\n      hideLoader(refs.loaderModal);\n      return\n    }\n\n    if (totalPages > 1) {\n      const total = queryParams.limit * totalPages;\n      console.log(total);\n      createPagination(total); \n    } else {\n      isiToast.endOfSearch();\n    }\n\n   \n      // ! create markup for the first time or once\n    \n\n    createCardsOfExercises(results, refs.resultContainer);\n    \n    \n    \n  \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    isiToast.apiIsiToastError();\n  } finally {\n    hideLoader(refs.loaderModal);\n    // ! I have to removeListener from another person\n  }\n}\n\n// ! create marcup for a lot of cards and pagination\n// async function createMoreCardsOfExercises() {\n  \n//   show(refs.pagi)\n//   showLoader(refs.loaderModal);\n//   page += 1\n\n//   try {\n//     const { results, totalPages } = await searchExerciseByFilters(queryParams);\n\n//     createCardsOfExercises(results, refs.resultContainer);\n//     console.log(totalPages);\n    \n//     if (page !== totalPages) {\n\n//     } else {\n//       isiToast.endOfSearch();\n//     }\n\n//   } catch (error) {\n//     console.error('Error fetching request:', error);\n//     isiToast.apiIsiToastError();\n//   } finally {\n//     //! refs.resultContainer.innerHTML = '';  need or not\n//     hideLoader(refs.loaderModal);\n\n//     if (queryParams.page === queryParams.totalPages) {\n//       isiToast.endOfSearch();  \n//       refs.pagi.removeEventListener('click', createMoreCardsOfExercises);      \n//     }\n\n//   }\n// }\n\n// ! Works with search button\nasync function handleSearch(event) {\n  event.preventDefault();\n\n  refs.resultContainer.innerHTML = '';\n  \n  queryParams.page = 1;\n\n  const formQuery = event.currentTarget;\n  queryParams.keyword = formQuery.elements.query.value.trim();\n  console.log(queryParams.keyword);\n\n  if (!queryParams.keyword) {\n    isiToast.noQuery();\n    return;\n  }\n\n  try {\n    console.log(queryParams);\n    const { results, totalPages } = await searchExerciseByFilters(queryParams);\n    \n    console.log(results);\n\n    // ! mistake\n\n    let filter;\n    \n    if (exercisesParamFilter === \"bodypart\") {\n      filter = \"bodyPart\";\n    } if (exercisesParamFilter === \"muscles\") {\n      filter = \"target\";\n    } else {\n      filter = \"equipment\"\n    }\n\n    if (exercisesParamFilter === \"bodypart\") {\n      filter = \"bodyPart\";\n    }\n\n    const filteredValues = results.map(result => result[filter]);\n    console.log(filteredValues);\n    const getQuery = (results, toQuery) =>\n    results.filter(result => result.name.includes(toQuery));\n    console.log(getQuery(results, queryParams.keyword)); \n\n    // console.log(results.filter.value);\n    \n    //  if (results || totalPages === 0) {\n    //   isiToast.noResults();\n    //   show(refs.textResult);\n    //   hideLoader(refs.loaderModal);\n    //   return\n    // }\n    createCardsOfExercises(results, refs.resultContainer);\n      \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    isiToast.apiIsiToastError();\n  } finally {\n      refs.searchForm.reset();\n  }\n}\n\nfunction createCardsOfExercises(results, resultContainer) {\n  const markup = results\n    .map(\n      ({ _id, rating, name, burnedCalories, time, bodyPart, target }) => `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n            </div>\n          </div>\n          <button type=\"submit\" data-id=${_id} class=\"to-favorites-start\">Start</button><a/>\n        </div>\n        <div class=\"card-box-title\">\n          <img class=\"filteered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n          <h3 class=\"filteered-title\">${name}</h3>\n        </div>\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n          </li>\n        </ul>  \n  </li>\n  `\n    )\n    .join('');\n\n  resultContainer.insertAdjacentHTML('beforeend', markup);\n  \n  const startButtonFavorite = document.querySelector('.to-favorites-start');\n  startButtonFavorite.addEventListener('click', handleStartExerciseByClick);\n  \n}\n\n\n//! Pagination\n\nfunction createPagination(totalPages, total) {\n    const paginationContainer = document.getElementById('pagination-container');\n    \n    // Перевірка на те, чи потрібно створювати пагінацію\n    if (totalPages > 1) {\n        // Створюємо новий екземпляр пагінації\n        const pagination = new Pagination(paginationContainer, {\n            totalItems: total, // Загальна кількість елементів, які будуть розділені по сторінках\n            itemsPerPage: 1, // Кількість елементів на одній сторінці\n            visiblePages: 3, // Кількість видимих сторінок в пагінації\n            page: 1, // Початкова сторінка\n            centerAlign: true, // Вирівнювання пагінації по центру\n            template: {\n                // Налаштування шаблону кнопок пагінації\n                page: '<a class=\"tui-pagination-btn\">{{page}}</a>',\n                currentPage: '<strong class=\"tui-pagination-btn tui-pagination-active\">{{page}}</strong>',\n                moveButton: '<a class=\"tui-pagination-btn tui-pagination-control\"></a>',\n                disabledMoveButton: '<a class=\"tui-pagination-btn tui-pagination-control disabled\"></a>',\n                moreButton: '<a class=\"tui-pagination-btn tui-pagination-ellipsis\" aria-label=\"More\"></a>'\n            }\n        });\n    } else {\n        // Якщо сторінка одна, пагінація не потрібна\n        paginationContainer.innerHTML = ''; // Очищуємо контейнер\n    }\n}\n\nasync function handlePagination (event) {\n    // Перевірити, чи клікнули на кнопку пагінації\n    if (event.target.classList.contains('tui-pagination-btn')) {\n        // Отримати номер сторінки, на яку клікнули\n      const pageNum = parseInt(event.target.textContent);\n      console.log(pageNum);\n        \n        // Оновити параметр page у queryParams\n        queryParams.page = pageNum;\n\n        // Викликати функцію renderExerciseByFilter з оновленими параметрами\n        await renderExerciseByFilter();\n    }\n}\n\n\n\n\nexport { renderExerciseByFilter };\nexport { exerciseId };\n  \n// ! will delete in future\nexport {exercisesParamFilter, exercisesParamName }\n","import { getExercisesByFilter } from './services/mainApi';\n\nimport { refs } from './templates/refs.js';\nimport { renderExerciseByFilter } from './exercises-details';\n\nlet filterDefault = 'Muscles';\nlet currentPage = 1;\nlet currentLimit = 0;\nlet screenWidth = window.innerWidth;\nlet exercisesParamFilter;\nlet exercisesParamName;\n\nconst queryParams = {\n  filter: filterDefault,\n  page: currentPage,\n  limit: currentLimit,\n};\n\nrefs.exercisesBtnEl.addEventListener('click', filterBtnExercises);\nrefs.paginationEl.addEventListener('click', onPaginationPages);\n\nif (screenWidth <= 375) {\n  currentLimit = 8;\n} else if (screenWidth <= 768) {\n  currentLimit = 12;\n} else {\n  currentLimit = 12;\n}\n\nasync function fetchDefaultMuscles() {\n  try {\n    const { results, page, totalPages } = await getExercisesByFilter(\n      queryParams\n    );\n    if (results && results.length > 0) {\n      createExercisesByFilterMarkup(results);\n      refs.paginationEl.innerHTML = pagesPagination(page, totalPages);\n    } else {\n      console.error('No results found for this filter');\n    }\n  } catch (error) {\n    console.log('Error fetching images:', error);\n  }\n}\n\nfetchDefaultMuscles();\n\nasync function filterBtnExercises(event) {\n  event.preventDefault();\n\n  const query = event.target.dataset.filter;\n  refs.exercisesGalleryEl.innerHTML = '';\n  console.log(query);\n  filterDefault = query;\n  currentPage = 1;\n\n  if (event.target === event.currentTarget) {\n    return;\n  }\n\n  try {\n    const { results, page, totalPages } = await getExercisesByFilter(\n      queryParams\n    );\n    createExercisesByFilterMarkup(results);\n\n    if (totalPages > 1) {\n      refs.paginationEl.innerHTML = pagesPagination(page, totalPages);\n    } else {\n      refs.paginationEl.innerHTML = '';\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createExercisesByFilterMarkup(results) {\n  const markup = results\n    .map(\n      ({ name, filter, imgUrl }) =>\n        `<li class=\"exercises-gallery-item\" data-filter>\n        <img class=\"exercises-gallery-img\" src=\"${imgUrl}\" alt=\"${filter}\">\n        <div class=\"exercises-gallery-text\">\n          <h3 class=\"exercises-gallery-title\">${name}</h3>\n          <p class=\"exercises-gallery-filter\">${filter}</p>\n        </div>\n        </li>`\n    )\n    .join('');\n  refs.exercisesGalleryEl.insertAdjacentHTML('beforeend', markup);\n  // const exercisesGalleryItem = document.querySelectorAll(\n  //   '.exercises-gallery-item'\n  // );\n  // exercisesGalleryItem.addEventListener('click', handleExercisesItemClick());\n}\n\nfunction pagesPagination(page, totalPages) {\n  let disabledMoveButton = '';\n  for (let i = 1; i <= totalPages; i++) {\n    disabledMoveButton += `<button class=\"button-pagination\" type=\"button\">${i}</button>`;\n  }\n  return disabledMoveButton;\n}\n\n// ===  Функція перехід по сторінкам\n\nasync function onPaginationPages(event) {\n  currentPage = event.target.textContent;\n  refs.exercisesGalleryEl.innerHTML = '';\n  try {\n    const { results, page, totalPages } = await getExercisesByFilter(\n      queryParams\n    );\n    const filter = results[0].filter;\n\n    if (page === totalPages) {\n      return;\n    }\n    createExercisesByFilterMarkup(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// function handleExercisesItemClick(event) {\n//   exercisesParamFilter = event.target.dataset.filter;\n//   console.log(exercisesParamFilter);\n//   renderExerciseByFilter();\n//   // вимнути слухач!!!!\n// }\n\nexport { filterDefault, currentPage, currentLimit };\nexport { exercisesParamFilter, exercisesParamName };\n","import axios from 'axios';\nimport { exercisesParamFilter, exercisesParamName } from '../exercises';\nimport { exerciseId } from '../exercises-details';\n// import { filterDefault, currentPage, currentLimit } from '../exercises';\n\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\n\nconst ENDPOINT_QUOTE = 'quote';\nconst ENDPOINT_FILTER = 'exercises';\nconst ENDPOINT_EXERCISES = 'filters';\n\nasync function fetchQuoteFromServer() {\n  try {\n    const response = await axios.get(`${BASE_URL}/${ENDPOINT_QUOTE}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\nasync function searchExerciseByFilters({ keyword, page = 1, limit }) {\n  const response = await axios.get(\n    `${BASE_URL}/${ENDPOINT_FILTER}`,\n    {\n      params: {\n        [filterDefault]: nameExercise,\n        keyword: keyword,\n        limit,\n        page,\n      },\n    }\n  );\n  return response.data;\n}\n\nasync function getExercisesByFilter() {\n  try {\n    const response = await axios.get(`${BASE_URL}/${ENDPOINT_EXERCISES}`, {\n      params: {\n        filter: filterDefault,\n        page: currentPage,\n        limit: currentLimit,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function searchExerciseByID(id) {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/${ENDPOINT_FILTER}/${exerciseId}`);\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport {\n  fetchQuoteFromServer,\n  searchExerciseByFilters,\n  searchExerciseByID,\n  getExercisesByFilter,\n};"],"names":["backdrop","modalCard","heartIcon","renderCard","storage","storageItem","addToFavoriteBtn","addToFavoriteOnClick","closeBtn","onCloseModal","handleBackdropClick","handleEscapeKey","event","element","elementId","favorites","item","updatedFavorites","changingButtonName","exercisesCardInfo","getCardInfo","exerciseId","BASE_URL","ENDPOINT","data","axios","err","value","results","modalWindowMarkup","error","markup","_id","bodyPart","equipment","gifUrl","name","target","description","rating","burnedCalories","time","popularity","renderStars","filledStar","emptyStar","filledStars","emptyStars","refs","handleSearch","paginationContainer","handlePagination","exercisesParamFilter","exercisesParamName","queryParams","handleStartExerciseByClick","evt","show","renderExerciseByFilter","showLoader","isiToast","hideLoader","totalPages","searchExerciseByFilters","total","createPagination","createCardsOfExercises","formQuery","filter","filteredValues","result","toQuery","resultContainer","Pagination","pageNum","filterDefault","currentPage","currentLimit","screenWidth","filterBtnExercises","onPaginationPages","fetchDefaultMuscles","page","getExercisesByFilter","createExercisesByFilterMarkup","pagesPagination","query","imgUrl","disabledMoveButton","i","ENDPOINT_QUOTE","ENDPOINT_FILTER","ENDPOINT_EXERCISES","fetchQuoteFromServer","keyword","limit","searchExerciseByID","id"],"mappings":"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"}