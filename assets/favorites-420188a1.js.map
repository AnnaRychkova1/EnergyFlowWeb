{"version":3,"file":"favorites-420188a1.js","sources":["../../src/js/favorites.js"],"sourcesContent":["import axios from \"axios\";\r\n// import { apiIsiToastError } from './services/isiToast.js';\r\nimport { searchExerciseByID } from \"./services/mainApi.js\";\r\n// import { hide, show } from \"./services/visibility\";\r\nimport { refs } from \"./templates/refs.js\";\r\n// import { icons } from \"../img/icons/symbol-defs.svg\";\r\n\r\n//  Quote of Day\r\nconst LS_KEY_QUOTE = \"quoteResponse\";\r\nconst quoteFromLS = JSON.parse(localStorage.getItem(LS_KEY_QUOTE));\r\nconsole.log(quoteFromLS);\r\n\r\n\r\nfunction displayQuoteOnPage(quoteData) {\r\n  const quoteText = document.querySelector('.quote-text');\r\n  const quoteAuthor = document.querySelector('.quote-author');\r\n  quoteText.textContent = quoteData.quote;\r\n  quoteAuthor.textContent = quoteData.author;\r\n}\r\n\r\n/// Create Favorites page\r\n\r\nconst LS_KEY_FAVORITES = \"favorites\";\r\n\r\nasync function createGalleryFromLS(LS_KEY_FAVORITES, createMarkupFavorites) {\r\n  try {\r\n    const itemsFromLS = await JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n\r\n    if (!itemsFromLS || !Array.isArray(itemsFromLS) || itemsFromLS.length === 0) {\r\n      console.log('No items found in local storage or data is invalid.');\r\n      apiIsiToastError();\r\n      return;\r\n    }\r\n        \r\n    refs.favoritesGallery.innerHTML = '';\r\n        \r\n    \r\n    refs.favoritesGallery.appendChild(refs.galleryItem);\r\n  \r\n\r\n  // if (itemsFromLS.length === 0) {\r\n  //   console.log(`There are no exercises in favorites.`);\r\n  //   apiIsiToastError();\r\n        \r\n  } catch (error) {\r\n    console.error('Error creating gallery from local storage:', error);\r\n  } finally {\r\n    console.log();\r\n refreshGallery();\r\n  }\r\n}\r\n\r\n\r\n// Refresh the gallery by updating the displayed items\r\nasync function refreshGallery() {\r\n    try {\r\n        const storedArray = JSON.parse(localStorage.getItem('favorites'));\r\n        if (!Array.isArray(storedArray) || storedArray.length === 0) {\r\n          console.log('Array in local storage is empty or does not exist.');\r\n          apiIsiToastError();\r\n            return;\r\n        }\r\n       \r\n        refs.favoritesGallery.innerHTML = '';\r\n\r\n        storedArray.forEach(item => {\r\n        const markup = createMarkupFavorites(item);\r\n\r\n        refs.favoritesGallery.insertAdjacentHTML('afterbegin', markup);\r\n        });\r\n\r\n        console.log('Gallery refreshed successfully.');\r\n    } catch (error) {\r\n      console.error('Error refreshing gallery:', error);\r\n      apiIsiToastError();\r\n    }\r\n}\r\n\r\n// Scroll for container favorites-gallery for desktop and tablet\r\nfunction scrollBy() {\r\n    refs.favoritesGallery.scrollTo({\r\n        top: refs.favoritesGallery.scrollHeight,\r\n        behavior: 'smooth',\r\n    });\r\n}\r\n\r\n// Remove an exersise from an array stored in local storage\r\n\r\nrefs.onRemoveBtn.addEventListener('click', removeObjectFromLocalStorage);\r\n\r\nasync function removeObjectFromLocalStorage(idToRemove) {\r\n    try {\r\n        let storedArray = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES));\r\n\r\n        if (!Array.isArray(storedArray) || storedArray.length === 0) {\r\n            console.log('Array in local storage is empty or does not exist.');\r\n            return;\r\n        }\r\n        storedArray = storedArray.filter(item => item._id !== idToRemove);\r\n        localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(storedArray));\r\n        console.log(`Object with ID ${idToRemove} removed from local storage.`);\r\n        await refreshGallery();\r\n    } catch (error) {\r\n        console.error('Error removing object from local storage:', error);\r\n    }\r\n}\r\n\r\n\r\n// Add to Favorites after click on button 'Add to Favotites' at Modal\r\n\r\n//  refs.addToFavoritesBtn.addEventListener('click', addItemToFavorites);\r\n\r\n//   async function addItemToFavorites(event) {\r\n//     event.preventDefault();\r\n\r\n//     const element = event.target.closest(\".ex-add-btn\");\r\n//     const elementId = element.dataset.id;\r\n//       try {\r\n//         const exercise = await searchExerciseByID(elementId);\r\n//         let favorites = JSON.parse(localStorage.getItem(LS_KEY_FAVORITES)) || [];\r\n//         const isDuplicate = favorites.some(favorite => favorite._id === exercise._id);\r\n\r\n//         if (!isDuplicate) {\r\n//            favorites.push(exercise);\r\n//            localStorage.setItem(LS_KEY_FAVORITES, JSON.stringify(favorites));\r\n//            await refreshGallery();\r\n//            console.log(\"Exercise added to favorites:\", exercise);\r\n//         } else {\r\n//            console.log(\"Exercise is already in favorites.\");\r\n//         }\r\n//     } catch (error) {\r\n//       console.error(\"Error adding exercise to favorites:\", error);\r\n//       apiIsiToastError();\r\n//     }\r\n// }\r\n\r\n\r\nrefs.onStartBtn.addEventListener('click', handleStartButtonClick);\r\n// After click  \"Start\" arrow\r\nfunction handleStartButtonClick(event) {\r\n    event.preventDefault();\r\n    // Open the modal\r\n    openModal();\r\n}\r\n\r\nfunction openModal() {\r\n    const modal = document.querySelector('.modal');\r\n    modal.classList.add('open');\r\n}\r\n\r\n\r\nfunction createMarkupFavorites(data) {\r\n  return data\r\n    .map(\r\n      i =>\r\n        `\r\n        <li class=\"favorites-gallery-item\" data-id=\"${i._id}\" id=\"card-${i._id}\">\r\n           <p class=\"favorites-item-head\">\r\n              <span class=\"favorites-item-head-wrapper\">\r\n                <span class=\"workout\">WORKOUT</span>\r\n                  <button class=\"favorites-remove-btn\">\r\n                    <svg class=\"favorites-remove-icon\" width=\"12\" height=\"13\">\r\n                      <use href=\"${icons}#icon-basket\"></use>\r\n                    </svg>\r\n                  </button>\r\n                  <a class=\"ex-item-start\" href=\"\" data-id=\"${i._id}\">\r\n                    <span>Start</span>\r\n                     <svg class=\"favorites-arrow-icon\" width=\"14\" height=\"14\">\r\n                      <use href=\"${icons}#icon-line\"></use>\r\n                    </svg>\r\n                  </a>\r\n             </p>\r\n              <span class=\"favorites-item-title\">\r\n                <span class=\"favorites-man-icon\"><svg class=\"ex-icon-run\" width=\"14\" height=\"14\">\r\n                  <use href=\"${icons}#icon-Man\"></use>\r\n                </svg>\r\n              </span>\r\n              \r\n            <h3 class=\"favorites-item-title\">${\r\n              i.name.charAt(0).toUpperCase() + i.name.slice(1)\r\n            }</h3>\r\n            </span>\r\n            </span>\r\n            <p class=\"favorites-item-info\">\r\n             <span class=\"ex-info-group\"><span class=\"favorites-item-desc\">Burned calories:</span> <span\r\n                class=\"favorites-item-value\">${i.burnedCalories} / ${\r\n          i.time\r\n        } min</span>\r\n        </span>\r\n        <span class=\"favorites-info-group\"><span class=\"favorites-item-desc\">Body part:</span> <span\r\n                class=\"favorites-item-value\">${\r\n                  i.bodyPart.charAt(0).toUpperCase() + i.bodyPart.slice(1)\r\n                }</span>\r\n        </span>\r\n        <span class=\"favorites-info-group\"><span class=\"favorites-item-desc\">Target:</span> <span\r\n                class=\"favorites-item-value\">${\r\n                  i.target.charAt(0).toUpperCase() + i.target.slice(1)\r\n                }</span>\r\n        </span>\r\n    </p>\r\n</li>\r\n        `\r\n    )\r\n    .join('');\r\n}\r\n// function createMarkupFavorites({ _id, bodyPart, name, target, burnedCalories, time }) {\r\n//       let isAdded = false;\r\n//       const favorites = localStorage.getItem(LS_KEY_FAVORITES);\r\n\r\n//       if (favorites) {\r\n//         const favoritesFromLS = JSON.parse(favorites);\r\n//         isAdded = favoritesFromLS.some(item => item._id === _id);\r\n//       }\r\n//       return `\r\n//         <li class=\"favorites-gallery-item\">\r\n//             <span class=\"workout\">workout</span>\r\n//             <a class=\"favorites-remove\" href=\"#\">\r\n//                 <button class=\"favorites-remove-btn\" type=\"button\">\r\n//                     <img class=\"favorites-remove-icon\" src=\"../img/icons/symbole-defs.svg#icon-basket\" alt=\"icon-basket\"/>\r\n//                 </button>\r\n//             </a>\r\n//             <a class=\"favorites-start\" href=\"#\">\r\n//                 <button class=\"favorites-start-btn\" type=\"button\">Start\r\n//                     <img class=\"favorites-start-icon\" src=\"../img/icons/symbole-defs.svg#icon-line\" alt=\"start-icon\"/>\r\n//                 </button>\r\n//             </a>\r\n//             <img class=\"favorites-man-icon\" src=\"../img/icons/symbol-defs.svg#icon-Man\" alt=\"man-icon\"/>\r\n//             <h3 class=\"favorites-item-title\">${name}</h3>\r\n//             <ul class=\"favorites-gallery-info\">\r\n//                 <li class=\"favorites-gallery-info-item\">Burned calories: <span class=\"descr-span\">${burnedCalories} / ${time} min</span></li>\r\n//                 <li class=\"favorites-gallery-info-item\">Body part: <span class=\"descr-span\">${bodyPart}</span></li>\r\n//                 <li class=\"favorites-gallery-info-item\">Target: <span class=\"descr-span\">${target}</span></li>\r\n//             </ul>\r\n//         </li>`;\r\n//     }\r\n\r\n"],"names":["LS_KEY_QUOTE","quoteFromLS","LS_KEY_FAVORITES","refreshGallery","storedArray","refs","item","markup","createMarkupFavorites","error","removeObjectFromLocalStorage","idToRemove","handleStartButtonClick","event","openModal","data","i"],"mappings":"qKAQA,MAAMA,EAAe,gBACfC,EAAc,KAAK,MAAM,aAAa,QAAQD,CAAY,CAAC,EACjE,QAAQ,IAAIC,CAAW,EAYvB,MAAMC,EAAmB,YAgCzB,eAAeC,GAAiB,CAC5B,GAAI,CACA,MAAMC,EAAc,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,EAChE,GAAI,CAAC,MAAM,QAAQA,CAAW,GAAKA,EAAY,SAAW,EAAG,CAC3D,QAAQ,IAAI,oDAAoD,EAChE,mBACE,MACH,CAEDC,EAAK,iBAAiB,UAAY,GAElCD,EAAY,QAAQE,GAAQ,CAC5B,MAAMC,EAASC,EAAsBF,CAAI,EAEzCD,EAAK,iBAAiB,mBAAmB,aAAcE,CAAM,CACrE,CAAS,EAED,QAAQ,IAAI,iCAAiC,CAChD,OAAQE,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChD,kBACD,CACL,CAYAJ,EAAK,YAAY,iBAAiB,QAASK,CAA4B,EAEvE,eAAeA,EAA6BC,EAAY,CACpD,GAAI,CACA,IAAIP,EAAc,KAAK,MAAM,aAAa,QAAQF,CAAgB,CAAC,EAEnE,GAAI,CAAC,MAAM,QAAQE,CAAW,GAAKA,EAAY,SAAW,EAAG,CACzD,QAAQ,IAAI,oDAAoD,EAChE,MACH,CACDA,EAAcA,EAAY,OAAOE,GAAQA,EAAK,MAAQK,CAAU,EAChE,aAAa,QAAQT,EAAkB,KAAK,UAAUE,CAAW,CAAC,EAClE,QAAQ,IAAI,kBAAkBO,CAAU,8BAA8B,EACtE,MAAMR,EAAc,CACvB,OAAQM,EAAO,CACZ,QAAQ,MAAM,4CAA6CA,CAAK,CACnE,CACL,CAgCAJ,EAAK,WAAW,iBAAiB,QAASO,CAAsB,EAEhE,SAASA,EAAuBC,EAAO,CACnCA,EAAM,eAAc,EAEpBC,GACJ,CAEA,SAASA,GAAY,CACH,SAAS,cAAc,QAAQ,EACvC,UAAU,IAAI,MAAM,CAC9B,CAGA,SAASN,EAAsBO,EAAM,CACnC,OAAOA,EACJ,IACCC,GACE;AAAA,sDAC8CA,EAAE,GAAG,cAAcA,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAM3C,KAAK;AAAA;AAAA;AAAA,8DAGsBA,EAAE,GAAG;AAAA;AAAA;AAAA,mCAGhC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMT,KAAK;AAAA;AAAA;AAAA;AAAA,+CAKtBA,EAAE,KAAK,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,KAAK,MAAM,CAAC,CAChD;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKkCA,EAAE,cAAc,MACrDA,EAAE,IACH;AAAA;AAAA;AAAA,+CAISA,EAAE,SAAS,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,SAAS,MAAM,CAAC,CACxD;AAAA;AAAA;AAAA,+CAICA,EAAE,OAAO,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAE,OAAO,MAAM,CAAC,CACpD;AAAA;AAAA;AAAA;AAAA,SAKZ,EACA,KAAK,EAAE,CACZ"}