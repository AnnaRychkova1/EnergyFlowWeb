{"version":3,"file":"exercises-details-93be09e4.js","sources":["../../src/js/exercises-details.js"],"sourcesContent":["import axios from 'axios';\nimport { hide, show, showLoader, hideLoader } from './services/visibility';\nimport { refs } from './templates/refs.js';\nimport isiToast from './services/isiToast.js';\nimport { createModalMenu } from './modal-menu.js';\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nconst ENDPOINT_EXERCISES = 'exercises';\n\nconst getParams = {\n    filter: '',\n    keyword: '',\n    page: 1,\n    limit: 9,\n};\n\nif (window.innerWidth <= 768) {\n    getParams.limit = 8;\n} else {\n    getParams.limit = 9;\n}\n\nasync function renderExerciseByFilterName(expectedFilter, name) {\n\n    let filter;\n\n    if (expectedFilter === 'Body parts') {\n        filter = 'bodypart';\n    } else if (expectedFilter === 'Muscles') {\n        filter = 'muscles';\n    } else if (expectedFilter === 'Equipment') {\n        filter = 'equipment';\n    }  \n\n    // if (refs.exercisesGalleryEl) {\n    //     hide(refs.subexercisesDetailsContainer);\n    //     hide(refs.subexercisesSearchForm);  \n    // }\n\n    if (!filter || !name) {\n        show(refs.subexercisesTextNoFound);\n        hideLoader(refs.loaderModal);\n        return;\n    }\n  \n    refs.exercisesSubtitle.textContent = `${name}`;\n    refs.subexercisesSearchForm.reset();\n    refs.subexercisesFilteredCards.innerHTML = '';\n    show(refs.subexercisesDetailsContainer);\n    show(refs.subexercisesSearchForm);\n    showLoader(refs.loaderModal);\n\n    try {\n        const { results, totalPages } = await searchExerciseByFilters({\n            filter: filter,\n            name: name,\n            keyword: getParams.keyword,\n            limit: getParams.limit,\n            page: getParams.page\n        });\n\n        if (totalPages < 1) {\n            show(refs.subexercisesTextNoFound);\n            hideLoader(refs.loaderModal);\n            return;\n        }\n\n        renderCards(results);\n        getParams.page += 1\n        \n        if (!refs.subExercisesPaginationContainer) {\n            pagesPagination(getParams.page, totalPages);\n        }\n\n    } catch (error) {\n        console.error('Error fetching images:', error);\n    } finally {\n        hideLoader(refs.loaderModal);\n    }\n\n    refs.subexercisesSearchForm.addEventListener('submit', handleSearch);\n    \n    async function handleSearch(evt) {\n        evt.preventDefault();\n\n        if (refs.exercisesGalleryEl) {\n            hide(refs.subexercisesDetailsContainer);\n            hide(refs.subexercisesSearchForm);\n        }\n\n        if (getParams.keyword.trim() === '') {\n            hideLoader(refs.loaderModal);\n            return\n        }\n\n        refs.exercisesSubtitle.textContent = `${name}`;\n        refs.subexercisesFilteredCards.innerHTML = '';\n        show(refs.subexercisesDetailsContainer);\n        show(refs.subexercisesSearchForm);\n        showLoader(refs.loaderModal);\n        \n        const formData = new FormData(evt.target)\n        getParams.keyword = formData.get('query');\n        console.log(getParams.keyword);\n\n        try {\n            const { results, totalPages } = await searchExerciseByFilters({\n                filter: filter,\n                name: name,\n                keyword: getParams.keyword,\n                limit: getParams.limit,\n                page: getParams.page\n            });\n\n            if (totalPages < 1) {\n                isiToast.noResults();\n                show(refs.subexercisesTextNoFound);\n                hideLoader(refs.loaderModal);\n                return;\n            }\n            \n            if (totalPages >= 2) {\n                pagesPagination(getParams.page, totalPages);\n            }\n\n            renderCards(results);\n            getParams.page += 1;\n\n            if (!refs.subExercisesPaginationContainer) {\n            pagesPagination(getParams.page, totalPages);\n        }\n\n        } catch (error) {\n            console.error('Error fetching request:', error);\n        } finally {\n            hideLoader(refs.loaderModal);\n        }\n    }\n}\n\nrefs.subexercisesFilteredCards.addEventListener('click', handleClickOnCardStart);\n\n// request to modal window\nfunction handleClickOnCardStart(evt) {\n\n    if (!evt.target.dataset.id) {\n        return\n    }\n\n    const exerciseId = evt.target.dataset.id;\n    //showLoader(refs.loaderModal);\n    createModalMenu(exerciseId);\n}\n\n// request to server\nasync function searchExerciseByFilters({filter, name, keyword, limit, page}) {\n    const response = await axios.get(\n        `${BASE_URL}/${ENDPOINT_EXERCISES}`,\n        {\n            params: {\n                [filter]: name,\n                keyword: keyword,\n                limit: limit,\n                page: page\n            },\n        }\n    );\n    return response.data;\n}\n\n// renderCards\nfunction renderCards(results) {\n    const markup = results.map(result => createCard(result)).join('');\n    refs.subexercisesFilteredCards.innerHTML = markup;\n}\n\n// create Card\nfunction createCard({ _id, rating, name, burnedCalories, time, bodyPart, target }) {\n    return `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n            </div>\n          </div>\n          <button class=\"to-favorites-start\" type=\"submit\" data-id=${_id}>Start</button>\n        </div>\n        <div class=\"card-box-title\">\n          <img class=\"filtered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n          <h3 class=\"filteered-title\">${name}</h3>\n        </div>\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n          </li>\n        </ul>\n  </li>`;\n}\n\n// Pagination\n\nfunction pagesPagination(currentPage, totalPages) {\n  let disabledMoveButton = '';\n  const totalPagesToShow = Math.min(totalPages, 3);\n  const startPage = Math.max(1, currentPage - 1);\n\n  showLoader(refs.loaderModal);\n\n  for (let i = startPage; i < startPage + totalPagesToShow; i++) {\n    disabledMoveButton += `<button class=\"button-pagination\" type=\"button\">${i}</button>`;\n  }\n\n  hideLoader(refs.loaderModal);\n\n  return disabledMoveButton;\n}\n\nasync function onPaginationPages(event) {\n  currentPage = event.target.textContent;\n  refs.subexercisesFilteredCards.innerHTML = '';\n  try {\n    const { totalPages } = await searchExerciseByFilters(results\n    );\n    renderCards(totalPages);\n    scrollToExerciseGallery();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { renderExerciseByFilterName };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import axios from 'axios';\n// import { hide, show, showLoader, hideLoader } from './services/visibility';\n// import { refs } from './templates/refs.js';\n// import isiToast from './services/isiToast.js';\n// import { createModalMenu } from './modal-menu.js';\n\n// const BASE_URL = 'https://energyflow.b.goit.study/api';\n// const ENDPOINT_EXERCISES = 'exercises';\n\n// let currentPage;\n// const getParams = {\n//     filter: '',\n//     keyword: '',\n//     page: 1,\n//     limit: 9,\n// };\n\n// if (window.innerWidth <= 768) {\n//     getParams.limit = 8;\n// } else {\n//     getParams.limit = 9;\n// }\n\n\n// async function renderExerciseByFilterName(expectedFilter, name) {\n//     \n\n//     let filter;\n\n//     if (expectedFilter === 'Body parts') {\n//         filter = 'bodypart';\n//     } else if (expectedFilter === 'Muscles') {\n//         filter = 'muscles';\n//     } else if (expectedFilter === 'Equipment') {\n//         filter = 'equipment';\n//     }\n\n//     if (!filter || !name) {\n//         show(refs.subexercisesTextNoFound);\n//         hideLoader(refs.loaderModal);\n//         return;\n//     }\n\n//     if (refs.exercisesGalleryEl) {\n//         hide(refs.subexercisesDetailsContainer);\n//     }\n\n//     refs.exercisesSubtitle.textContent = `${name}`;\n//     refs.subexercisesFilteredCards.innerHTML = '';\n//     refs.paginationEl.innerHTML = '';\n//     showLoader(refs.loaderModal);\n\n//     try {\n//         const { results, totalPages } = await searchExerciseByFilters({\n//             filter: filter,\n//             name: name,\n//             keyword: getParams.keyword,\n//             limit: getParams.limit,\n//             page: getParams.page\n//         });\n\n//         console.log(totalPages);\n//         console.log(results);\n//         console.log(getParams.page);\n\n//         if (totalPages < 1) {\n//             isiToast.noResults();\n//             show(refs.subexercisesTextNoFound);\n//             hideLoader(refs.loaderModal);\n//             return;\n//         }\n\n//         refs.paginationEl.addEventListener('click', onPaginationPages);\n\n//         currentPage += 1;\n//         renderCards(results);\n\n//         refs.paginationEl.innerHTML = pagesPagination(currentPage, totalPages);\n\n//     } catch (error) {\n//         console.error('Error fetching result:', error);\n//     } finally {\n//         hideLoader(refs.loaderModal);\n//     }\n\n\n//     //!  Works with search button\n//         refs.subexercisesSearchForm.addEventListener('submit', handleSearch);\n    \n//         async function handleSearch(evt) {\n//             evt.preventDefault();\n\n//              if (refs.exercisesGalleryEl) {\n//                 hide(refs.subexercisesDetailsContainer);\n//                 // refs.subexercisesSearchForm.reset();\n//                 hide(refs.subexercisesSearchForm);\n//             }\n\n//             refs.exercisesSubtitle.textContent = `${name}`;\n//             show(refs.subexercisesDetailsContainer);\n//             show(refs.subexercisesSearchForm);\n//             showLoader(refs.loaderModal);\n//             refs.subexercisesFilteredCards.innerHTML = '';\n//         refs.subexercisesSearchForm.reset();\n\n//             // get query\n//             const formData = new FormData(evt.target)\n//             getParams.keyword = formData.get('query');\n//             console.log(getParams.keyword);\n\n//             // ! check fot the wrong query\n    \n//              if (getParams.keyword.trim() === '') {\n//                     isiToast.noQuery();\n//                     hideLoader(refs.loaderModal);\n//                     return\n//             }\n\n//         // ! Очищувати список вправ\n//             // ! Очищувати мій дів\n//         // ! Очищувати форму\n        \n\n       \n//             try {\n//                 const { results, totalPages } = await searchExerciseByFilters({\n//                     filter: filter,\n//                     name: name,\n//                     keyword: getParams.keyword,\n//                     limit: getParams.limit,\n//                     page: getParams.currentPage\n//                 });\n\n//                 if (totalPages < 1) {\n//                     isiToast.noResults();\n//                     show(refs.subexercisesTextNoFound);\n//                     hideLoader(refs.loaderModal);\n//                     return;\n//                 }\n            \n//                 if (totalPages > 1) {\n//           refs.paginationEl.innerHTML = pagesPagination(currentPage, totalPages);\n//         } else {\n//           refs.paginationEl.innerHTML = '';\n//         }\n\n//                 renderCards(results);\n//                 getParams.currentPage += 1;\n\n//             } catch (error) {\n//                 console.error('Error fetching images:', error);\n//                 isiToast.apiIsiToastError();\n//             } finally {\n//                 // refs.subexercisesSearchForm.reset();\n//                 hide(refs.loaderModal);\n//             }\n//         }\n//     }\n\n// refs.subexercisesFilteredCards.addEventListener('click', handleClickOnCardStart)\n\n\n\n// function handleClickOnCardStart(evt) {\n//     if (!evt.target.dataset.id) {\n//         return\n//     }\n//     // showLoader(refs.loaderModal);\n//     const exerciseId = evt.target.dataset.id;\n//     console.log(exerciseId);\n//     createModalMenu(exerciseId);\n\n//     async function searchExerciseByFilters({ filter, name, keyword, limit, page }) {\n//         const response = await axios.get(\n//             `${BASE_URL}/${ENDPOINT_EXERCISES}`,\n//             {\n//                 params: {\n//                     [filter]: name,\n//                     keyword: keyword,\n//                     limit: limit,\n//                     page: page\n//                 },\n//             }\n//         );\n//         return response.data;\n//     }\n// }\n\n// // ! +++\n// function renderCards(results) {\n//     const markup = results.map(result => createCard(result)).join('');\n//     refs.subexercisesFilteredCards.innerHTML = markup;\n// }\n\n// // ! +++\n// function createCard({ _id, rating, name, burnedCalories, time, bodyPart, target }) {\n//     return `<li class=\"filtered-card-item\">\n//         <div class=\"card-box-workout\">\n//           <div class=\"card-box-info\">\n//             <div class=\"filtered-workout\">Workout</div>\n//             <div class=\"card-box-rating\">\n//               <p class=\"filtered-rating\">${Math.round(rating)}</p>\n//               <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n//             </div>\n//           </div>\n//           <button class=\"to-favorites-start\" type=\"submit\" data-id=${_id}\"><a>Start</a></button>\n//         </div>\n//         <div class=\"card-box-title\">\n//           <img class=\"filtered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n//           <h3 class=\"filteered-title\">${name}</h3>\n//         </div>\n//         <ul class=\"filtered-description\">\n//           <li class=\"filtered-descr-item\">\n//             <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n//           </li>\n//           <li class=\"filtered-descr-item\">\n//             <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n//           </li>\n//           <li class=\"filtered-descr-item\">\n//             <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n//           </li>\n//         </ul>\n//   </li>`;\n// }\n\n"],"names":["BASE_URL","ENDPOINT_EXERCISES","getParams","renderExerciseByFilterName","expectedFilter","name","filter","show","refs","hideLoader","showLoader","results","totalPages","searchExerciseByFilters","renderCards","pagesPagination","error","handleSearch","evt","hide","formData","isiToast","handleClickOnCardStart","exerciseId","createModalMenu","keyword","limit","page","axios","markup","result","createCard","_id","rating","burnedCalories","time","bodyPart","target","currentPage","disabledMoveButton","totalPagesToShow","startPage","i"],"mappings":"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"}