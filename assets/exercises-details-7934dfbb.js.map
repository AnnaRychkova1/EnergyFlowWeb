{"version":3,"file":"exercises-details-7934dfbb.js","sources":["../../src/js/exercises-details.js"],"sourcesContent":["import axios from 'axios';\nimport { hide, show, showLoader, hideLoader } from './services/visibility';\nimport { refs } from './templates/refs.js';\nimport isiToast from './services/isiToast.js';\nimport { createModalMenu } from './modal-menu.js';\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\nconst ENDPOINT_EXERCISES = 'exercises';\n\nconst getParams = {\n    filter: '',\n    keyword: '',\n    page: 1,\n    limit: 9,\n};\n\nif (window.innerWidth <= 768) {\n    getParams.limit = 8;\n} else {\n    getParams.limit = 9;\n}\n\nasync function renderExerciseByFilterName(expectedFilter, name) {\n    hideLoader(refs.loaderModal);\n\n    let filter;\n\n    if (expectedFilter === 'Body parts') {\n        filter = 'bodypart';\n    } else if (expectedFilter === 'Muscles') {\n        filter = 'muscles';\n    } else if (expectedFilter === 'Equipment') {\n        filter = 'equipment';\n    }  \n\n    // ! why search form is still shown? Maybe i need remove listener from form?\n\n    if (refs.exercisesGalleryEl) {\n        hide(refs.subexercisesDetailsContainer);\n        refs.subexercisesSearchForm.reset();\n        // hide(refs.subexercisesSearchForm);\n    }\n\n    refs.subexercisesFilteredCards.innerHTML = ''\n    refs.exercisesSubtitle.textContent = `${name}`;\n    show(refs.subexercisesDetailsContainer);\n    show(refs.subexercisesSearchForm);\n    showLoader(refs.loaderModal);\n\n    if (!filter || !name) {\n        isiToast.noResults();\n        show(refs.subexercisesTextNoFound);\n        hideLoader(refs.loaderModal);\n        return;\n    }\n\n    // ! Робити інер, тобто очищати список перед кожним трай\n     // ! Очищувати список вправ\n        // ! Очищувати мій дів\n    // ! Очищувати форму\n        \n\n    try {\n        const { results, totalPages } = await searchExerciseByFilters({\n            filter: filter,\n            name: name,\n            keyword: getParams.keyword,\n            limit: getParams.limit,\n            page: getParams.page\n        });\n\n        console.log(totalPages);\n        console.log(results);\n        console.log(getParams.page);\n\n        if (totalPages < 1) {\n            isiToast.noResults();\n            show(refs.subexercisesTextNoFound);\n            hideLoader(refs.loaderModal);\n            return;\n        }\n\n        renderCards(results);\n        \n        if (!refs.subExercisesPaginationContainer) {\n            createPagination(totalPages);\n        }\n\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        isiToast.apiIsiToastError();\n    } finally {\n        hideLoader(refs.loaderModal);\n        refs.subexercisesSearchForm.reset();\n\n    }\n\n    //!  Works with search button\n    refs.subexercisesSearchForm.addEventListener('submit', handleSearch);\n    \n    async function handleSearch(evt) {\n        evt.preventDefault();\n\n         if (refs.exercisesGalleryEl) {\n            hide(refs.subexercisesDetailsContainer);\n            // refs.subexercisesSearchForm.reset();\n            hide(refs.subexercisesSearchForm);\n        }\n\n        refs.exercisesSubtitle.textContent = `${name}`;\n        show(refs.subexercisesDetailsContainer);\n        show(refs.subexercisesSearchForm);\n        showLoader(refs.loaderModal);\n        refs.subexercisesFilteredCards.innerHTML = '';\n\n        // get query\n        const formData = new FormData(evt.target)\n        getParams.keyword = formData.get('query');\n        console.log(getParams.keyword);\n\n        // ! check fot the wrong query\n    \n         if (getParams.keyword.trim() === '') {\n                isiToast.noQuery();\n                hideLoader(refs.loaderModal);\n                return\n        }\n\n    // ! Очищувати список вправ\n        // ! Очищувати мій дів\n    // ! Очищувати форму\n        \n\n       \n        try {\n            const { results, totalPages } = await searchExerciseByFilters({\n                filter: filter,\n                name: name,\n                keyword: getParams.keyword,\n                limit: getParams.limit,\n                page: getParams.page\n            });\n\n            if (totalPages < 1) {\n                isiToast.noResults();\n                show(refs.subexercisesTextNoFound);\n                hideLoader(refs.loaderModal);\n                return;\n            }\n            \n            if (totalPages >= 2) {\n                createPagination(totalPages);\n            }\n\n            renderCards(results);\n            getParams.page += 1;\n\n        } catch (error) {\n            console.error('Error fetching images:', error);\n            isiToast.apiIsiToastError();\n        } finally {\n            // refs.subexercisesSearchForm.reset();\n            hide(refs.loaderModal);\n        }\n    }\n}\n\nrefs.subexercisesFilteredCards.addEventListener('click', handleClickOnCardStart)\n\nfunction handleClickOnCardStart(evt) {\n    if (!evt.target.dataset.id) {\n        return\n    }\n    // showLoader(refs.loaderModal);\n    const exerciseId = evt.target.dataset.id;\n    hide(refs.subexercisesDetailsContainer);\n    //console.log(exerciseId);\n    createModalMenu(exerciseId);\n}\n\nasync function searchExerciseByFilters({filter, name, keyword, limit, page}) {\n    const response = await axios.get(\n        `${BASE_URL}/${ENDPOINT_EXERCISES}`,\n        {\n            params: {\n                [filter]: name,\n                keyword: keyword,\n                limit: limit,\n                page: page\n            },\n        }\n    );\n    return response.data;\n}\n\n// ! +++\nfunction renderCards(results) {\n    const markup = results.map(result => createCard(result)).join('');\n    refs.subexercisesFilteredCards.innerHTML = markup;\n}\n\n// ! +++\nfunction createCard({ _id, rating, name, burnedCalories, time, bodyPart, target }) {\n    return `<li class=\"filtered-card-item\">\n        <div class=\"card-box-workout\">\n          <div class=\"card-box-info\">\n            <div class=\"filtered-workout\">Workout</div>\n            <div class=\"card-box-rating\">\n              <p class=\"filtered-rating\">${Math.round(rating)}</p>\n              <img class=\"filteered-star\" href=\"#\" alt=\"star\" height=\"35\"></img>\n            </div>\n          </div>\n          <button class=\"to-favorites-start\" type=\"submit\" data-id=${_id}>Start</button>\n        </div>\n        <div class=\"card-box-title\">\n          <img class=\"filtered-athlete\" href=\"#\" alt=\"athlete\" height=\"35\"></img>\n          <h3 class=\"filteered-title\">${name}</h3>\n        </div>\n        <ul class=\"filtered-description\">\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Burned calories: <spam class=\"filtered-descr-value\">${burnedCalories} / ${time} min</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Body part: <spam class=\"filtered-descr-value\">${bodyPart}</spam></p>\n          </li>\n          <li class=\"filtered-descr-item\">\n            <p class=\"filtered-descr-title\">Target: <spam class=\"filtered-descr-value\">${target}</spam></p>\n          </li>\n        </ul>\n  </li>`;\n}\n\n// ! Pagination\n\nfunction createPagination(totalPages, pageCurrentNumber) {\n\n    refs.subExercisesPaginationContainer.innerHTML = '';\n\n    let startPage = Math.max(1, pageCurrentNumber - 1);\n    let endPage = Math.min(totalPages, startPage + 2);\n    console.log(pageCurrentNumber);\n\n    for (let i = startPage; i <= endPage; i++) {\n        const button = document.createElement('button');\n        button.textContent = i;\n        button.classList.add('subexercises-pagination-button');\n        if (i === pageCurrentNumber) {\n            button.classList.add('active');\n        }\n        button.addEventListener('click', () => handlePageChange(i));\n        refs.subExercisesPaginationContainer.appendChild(button);\n    }\n    console.log(refs.subExercisesPaginationContainer);\n}\n\nfunction handlePageChange(pageNumber) {\n    getParams.page = pageNumber;\n    console.log(pageNumber);\n    renderExerciseByFilterName(); \n}\n\nexport { renderExerciseByFilterName };\n"],"names":["BASE_URL","ENDPOINT_EXERCISES","getParams","renderExerciseByFilterName","expectedFilter","name","hideLoader","refs","filter","hide","show","showLoader","isiToast","results","totalPages","searchExerciseByFilters","renderCards","createPagination","error","handleSearch","evt","formData","handleClickOnCardStart","exerciseId","createModalMenu","keyword","limit","page","axios","markup","result","createCard","_id","rating","burnedCalories","time","bodyPart","target","pageCurrentNumber","startPage","endPage","i","button","handlePageChange","pageNumber"],"mappings":"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"}