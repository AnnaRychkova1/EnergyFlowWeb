{"version":3,"file":"modal-menu-761ed87b.js","sources":["../../src/img/icons/symbol-defs.svg","../../src/js/modal-menu.js"],"sourcesContent":["export default \"__VITE_ASSET__bf1dda18__\"","import axios from 'axios';\nimport { hide, show, showLoader, hideLoader } from './services/visibility';\nimport icons from '../img/icons/symbol-defs.svg';\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api';\n\nconst gallery = document.querySelector('.results'); // плюс название содержимого карточки //\nconst backdrop = document.querySelector('.backdrop');\nconst modalCard = document.querySelector('.modal');\nconst favorites = document.querySelector('.ex-add-favorite');\n\nconst heartIcon = `\n// <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n//     <use href=\"${icons}#icon-heart\"></use>\n// </svg>`;\n\n\nlet expectedId;\n// ! Something like this\nasync function createModalMenu(expectedExercisesId) {\n  expectedId = expectedExercisesId;\n\n  try {\n    const responseIdObject = await getCardInfo(expectedId);\n    console.log(responseIdObject);\n    modalWindowMarkup(responseIdObject);\n\n    console.log(expectedId);\n    const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n    addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n\n    function addToFavoriteOnClick(event) {\n      // Отримання id вправи з кнопки або з даних модального вікна\n      const exerciseId = event.target.dataset.id || expectedId;\n      // Отримання даних про вправу з модального вікна\n      const exerciseName = document.querySelector('.exercise-name').textContent;\n      const exerciseBodyPart = document.querySelector('.exercise-information .ex-block:nth-child(1) .exercise-label').textContent;\n      const exerciseEquipment = document.querySelector('.exercise-information .ex-block:nth-child(2) .exercise-label').textContent;\n      const exerciseTime = document.querySelector('.exercise-information .ex-block:nth-child(3) .exercise-label').textContent;\n      const exerciseTarget = document.querySelector('.exercise-information .ex-block:nth-child(4) .exercise-label').textContent;\n      const exerciseBurnedCalories = document.querySelector('.exercise-information .ex-block:nth-child(5) .exercise-label').textContent;\n      const exerciseGifUrl = document.querySelector('.exercise-gif img').src;\n      // Отримання існуючих обраних з localStorage (або ініціалізація пустого масиву)\n      let favorites = JSON.parse(localStorage.getItem('exerciseFavorites')) || [];\n      // Перевірка, чи вправа вже є в обраних\n      const isFavorite = favorites.some((favorite) => favorite._id === exerciseId);\n      // Оновлення тексту кнопки\n      if (isFavorite) {\n        event.target.textContent = 'Remove from favorites';\n      } else {\n        event.target.textContent = 'Add to favorites';\n      }\n      // Зміна логіки залежно від того, чи є вправа в обраних\n      if (isFavorite) {\n        // Видалення вправи з обраних\n        favorites = favorites.filter((favorite) => favorite._id !== exerciseId);\n        // Оновлення localStorage новим списком обраних\n        localStorage.setItem('exerciseFavorites', JSON.stringify(favorites));\n        // Візуальний відгук (необов'язково)\n        event.target.textContent = 'Removed from favorites!';\n        // Або використовуйте інший механізм зворотного зв'язку (наприклад, зміна піктограми, спливаюче повідомлення)\n      } else {\n        // Додавання нової вправи до масиву обраних\n        const newExercise = {\n          _id: exerciseId,\n          name: exerciseName,\n          bodyPart: exerciseBodyPart,\n          equipment: exerciseEquipment,\n          time: exerciseTime,\n          target: exerciseTarget,\n          burnedCalories: exerciseBurnedCalories,\n          gifUrl: exerciseGifUrl,\n        };\n        favorites.push(newExercise);\n        // Оновлення localStorage новим списком обраних\n        localStorage.setItem('exerciseFavorites', JSON.stringify(favorites));\n        // Або використовуйте інший механізм зворотного зв'язку (наприклад, зміна піктограми, спливаюче повідомлення)\n      }\n    }\n\n     } catch (error) {\n    console.error('Error fetching images:', error);\n  }\n}\n   \n\n    // function addToFavoriteOnClick(event) {\n    //   console.log(event);\n    //   console.log(expectedId);\n        \n    //   // const element = event.target.closest('.add-favorite-btn');\n      \n    //   // const elementId = element.dataset.id;\n    //   // const favorites = localStorage.getItem('favorites');\n    \n      \n    //   // console.log(elementId);\n    //   // console.log(expectedId);\n    // }\n  \n\n\n    //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    //   console.log(expectedId);\n\n    // console.log(event.target);\n\n\n    // console.log(favorites);\n    //   const isFavorite = favorites.some(item => item._id === expectedId);\n\n    //   if (isFavorite) {\n    //     const updatedFavorites = favorites.filter(item => item._id !== expectedId);\n    //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    //     element.classList.remove('is-favorite');\n    //     element.innerHTML = changingButtonName('add');\n    //   } else {\n    \n \n  //     function addToFavoriteOnClick(event) {\n  \n\n\n  //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  //   console.log(expectedId);\n\n  // console.log(event.target);\n\n\n  // console.log(favorites);\n  //   const isFavorite = favorites.some(item => item._id === expectedId);\n\n  //   if (isFavorite) {\n  //     const updatedFavorites = favorites.filter(item => item._id !== expectedId);\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //     element.classList.remove('is-favorite');\n  //     element.innerHTML = changingButtonName('add');\n  //   } else {\n    \n  //     // const exercisesCardInfo = await getCardInfo(expectedId);\n  //     localStorage.setItem(\n  //       'favorites',\n  //       JSON.stringify([...favorites, responseIdObject])\n  //     );\n\n  //     // there must be event.target\n  //     element.classList.add('is-favorite');\n  //     element.innerHTML = changingButtonName('remove');\n  //   }\n  //     }\n    \n\n    \n\n\n\n\n\n    \n    \n    \n    \n    \n    \n    //closeBtn.addEventListener('click', onCloseModal);\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\nasync function getCardInfo(exerciseId) {\n  console.log(exerciseId);\n  try {\n    const BASE_URL = 'https://energyflow.b.goit.study/api';\n    const ENDPOINT = 'exercises';\n    const { data } = await axios.get(`${BASE_URL}/${ENDPOINT}/${exerciseId}`);\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n\n// ! Good тут після <p class=\"ex-current-rating\">${rating}</p> <ul class=\"exercise-stars-list\"></ul> я видалила поки що // ${renderStars(popularity)}\nfunction modalWindowMarkup({\n  _id,\n  bodyPart,\n  equipment,\n  time,\n  target,\n  burnedCalories,\n  gifUrl,\n  name,\n  popularity,\n  rating,\n  description,\n}) {\n  const markup =\n    `<div class=\"modal-container\">\n            <button class=\"modal-close-btn\">\n                <svg\n                    class=\"modal-close-icon\"\n                    width=\"24\"\n                    height=\"24\">\n                    <use href=\"${icons}#icon-x\"></use>\n                </svg>\n            </button>\n            <div class=\"exercise-gif\">\n              <picture>\n                <source\n                  media=\"(max-width:767.98px)\"\n                  type=\"gif\"\n                  width=\"295\"\n                  height=\"258\"\n                  />\n                <source\n                  media=\"(min-width:768px)\"\n                  type=\"gif\"\n                  width=\"270\"\n                  height=\"259\"\n                  />\n                  <img\n                    class=\"gif-ex\"\n                    src=\"${gifUrl}\"\n                    width=\"295\"\n                    height=\"258\"\n                    alt=\"${name}\"\n                  />\n              </picture>\n            </div>\n            <div class=\"ex-content-container\">\n                <h3 class=\"exercise-name\">${name}</h3>\n               <div class=\"rating-container\">\n                <p class=\"ex-current-rating\">${rating}</p>\n                <ul class=\"exercise-stars-list\">\n                     \n                </ul>\n                </div>\n                <div class=\"exercise-information\">\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Target</span>\n                        <span class=\"exercise-label\">${target}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Body part</span>\n                        <span class=\"exercise-label\">${bodyPart}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Equipment</span>\n                        <span class=\"exercise-label\">${equipment}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Popular</span>\n                        <span class=\"exercise-label\">${popularity}</span>\n                    </div>\n                    <div class=\"ex-block\">\n                        <span class=\"exercise-value\">Burned calories</span>\n                        <span class=\"exercise-label\">${burnedCalories}/3 min</span>\n                    </div>\n\n                    <p class=\"exercise-description\">\n                        ${description}\n                    </p>\n\n                    <div class=\"ex-add-btn-container\">\n                        <button type=\"button\" data-id=\"${_id}\" class=\"ex-add-favorite\">\n                            Add to favorites\n                            <svg\n                                class=\"heart-svg\"\n                                width=\"18\"\n                                height=\"18\">\n                                <use href=\"${icons}#icon-heart\"></use>\n                            </svg>\n                        </button>\n                         <button data-id=\"${_id}\" class=\"ex-rating-button\">\n                           Give a rating\n                         </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n  \n  modalCard.innerHTML = markup;\n  \n}\n\n\n//   const addToFavoriteBtn = document.querySelector('.ex-add-favorite');\n//   addToFavoriteBtn.addEventListener('click', addToFavoriteOnClick);\n\n//   const closeBtn = document.querySelector('.modal-close-btn');\n//   closeBtn.addEventListener('click', onCloseModal);\n//   backdrop.addEventListener('click', handleBackdropClick);\n//   document.addEventListener('keydown', handleEscapeKey);\n \n// function onCloseModal() {\n//   modalCard.classList.add('is-hidden');\n//   backdrop.classList.add('is-hidden');\n//   modalCard.innerHTML = '';\n\n//   document.removeEventListener('keydown', handleEscapeKey);\n//   backdrop.removeEventListener('click', handleBackdropClick);\n// }\n// function handleBackdropClick(event) {\n//   if (event.target.closest('.modal')) {\n//     return;\n//   }\n//   modalCard.classList.add('is-hidden');\n//   backdrop.classList.add('is-hidden');\n//   modalCard.innerHTML = '';\n\n//   document.removeEventListener('keydown', handleEscapeKey);\n//   backdrop.removeEventListener('click', handleBackdropClick);\n// }\n// function handleEscapeKey(event) {\n//   event.preventDefault();\n//   if (event.key === 'Escape') {\n//     modalCard.classList.add('is-hidden');\n//     backdrop.classList.add('is-hidden');\n//     modalCard.innerHTML = '';\n\n//     document.removeEventListener('keydown', handleEscapeKey);\n//     backdrop.removeEventListener('click', handleBackdropClick);\n//   }\n// }\n// const activeColor = '#eea10c';\n// const noActiveColor = '#e8e8e8';\n// const stars = document.querySelectorAll('.exercise-stars-list li');\n\n\nconst stars = document.querySelectorAll('.ex-rate-icon');\nconst activeColor = '#eea10c';\nconst noActiveColor = '#e8e8e8';\n\n// stars.forEach((star, index) => {\n//   const rating = Number(star.getAttribute('data-rating'));\n//   const starHTML = renderStars(rating);\n//   const filledStarsCount = (starHTML.match(/&#9733;/g) || []).length;\n//   if (index < filledStarsCount) {\n//     star.style.fill = activeColor;\n//   } else {\n//     star.style.fill = noActiveColor;\n//   }\n// });\n\n// function renderStars(rating) {\n//   const filledStar = '<span class=\"star\">&#9733;</span>';\n//   const emptyStar = '<span class=\"star\">&#9734;</span>';\n//   const filledStars = filledStar.repeat(Math.floor(rating));\n//   const halfStar = rating % 1 !== 0 ? '<span class=\"star\">&#9733;</span>' : '';\n//   const emptyStarsCount = Math.max(0, 5 - Math.ceil(rating)); // Ensure non-negative value\n//   const emptyStars = emptyStar.repeat(emptyStarsCount);\n//   return filledStars + halfStar + emptyStars;\n// }\n\nexport { createModalMenu };\n\n\n\n//   function changingButtonName(value = 'add') {\n//     if (value === 'add') {\n//       return `Add to favorites\n//         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n//           <use href=\"${heartIcon}#icon-heart\"></use>\n//         </svg>`;\n//     } else {\n//       return `Remove from\n//         <svg class=\"icon-heart\" width=\"18\" height=\"18\">\n//           <use href=\"${heartIcon}#icon-heart\"></use>\n//         </svg>`;\n//     }\n//   }\n\n"],"names":["icons","modalCard","expectedId","createModalMenu","expectedExercisesId","addToFavoriteOnClick","event","exerciseId","exerciseName","exerciseBodyPart","exerciseEquipment","exerciseTime","exerciseTarget","exerciseBurnedCalories","exerciseGifUrl","favorites","isFavorite","favorite","newExercise","responseIdObject","getCardInfo","modalWindowMarkup","error","BASE_URL","ENDPOINT","data","axios","err","_id","bodyPart","equipment","time","target","burnedCalories","gifUrl","name","popularity","rating","description","markup"],"mappings":"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"}